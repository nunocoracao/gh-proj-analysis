{
  "results": {
    "dockerfile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "composefile": {
      "exist": true,
      "count": 1,
      "rootCount": 1,
      "subFolderCount": 0,
      "filepaths": [
        "golang-mongodb-api.git/docker-compose.yml"
      ]
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 492490703,
    "name": "golang-mongodb-api",
    "full_name": "wpcodevo/golang-mongodb-api",
    "owner": {
      "login": "wpcodevo",
      "html_url": "https://github.com/wpcodevo",
      "type": "User"
    },
    "html_url": "https://github.com/wpcodevo/golang-mongodb-api",
    "description": "In this article, you'll learn how to build a CRUD gRPC API server with Golang, MongoDB-Go-driver, and Docker-compose. You'll also build a gRPC client to interact with the gRPC API.",
    "url": "https://api.github.com/repos/wpcodevo/golang-mongodb-api",
    "clone_url": "https://github.com/wpcodevo/golang-mongodb-api.git",
    "homepage": "https://codevoweb.com/crud-grpc-server-api-client-with-golang-and-mongodb",
    "size": 137,
    "stargazers_count": 42,
    "watchers_count": 42,
    "language": "Go"
  }
}