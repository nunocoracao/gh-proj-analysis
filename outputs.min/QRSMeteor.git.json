{
  "results": {
    "dockerfile": {
      "exist": true,
      "count": 2,
      "rootCount": 1,
      "subFolderCount": 1,
      "filepaths": [
        "QRSMeteor.git/Dockerfile",
        "QRSMeteor.git/node_modules/highlight.js/lib/languages/dockerfile.js"
      ]
    },
    "composefile": {
      "exist": true,
      "count": 3,
      "rootCount": 2,
      "subFolderCount": 1,
      "filepaths": [
        "QRSMeteor.git/docker-compose-linux.yml",
        "QRSMeteor.git/docker-compose.yml",
        "QRSMeteor.git/dockerConfigMountFolder/docker-compose.yml"
      ]
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 60176885,
    "name": "QRSMeteor",
    "full_name": "QHose/QRSMeteor",
    "owner": {
      "login": "QHose",
      "html_url": "https://github.com/QHose",
      "type": "User"
    },
    "html_url": "https://github.com/QHose/QRSMeteor",
    "description": "This \"non Qlik\" but NodeJS (Meteor) based platform has been designed to demonstrate the power of the Qlik Sense API's (QRS, QPS, Engine API, DIV and IFrame) for companies that are looking to integrate Qlik Sense in their multi-tenant SaaS platform. Please look at the video's below for an introduction. In the demo you will see a screen divided into two parts.  The left side shows \"the broker\" in your SaaS platform; a piece of software that you already use today to mass maintain the SaaS applications for all of your customers. This broker executes its activities based on the list of your customers, their access rights and the relevant template apps (depending on what the customer has configured in your platform). The right side shows you the result of the activities of the broker; the apps and streams automatically created in Qlik Sense. This is also the side where you have to select your first template app. This demo tries to show you the activities from Sense that you can automate in your platform. Sense internally also works with the same REST API's you can use, so you can record the REST call from each manual activity in the QMC and use this code to create/delete/reload/publish streams and apps in your software. <Created by Martijn Biesbroek and Raymond Neves, Demo website currently under review>",
    "url": "https://api.github.com/repos/QHose/QRSMeteor",
    "clone_url": "https://github.com/QHose/QRSMeteor.git",
    "homepage": "http://integration.qlik.com",
    "size": 426853,
    "stargazers_count": 22,
    "watchers_count": 22,
    "language": "HTML"
  }
}