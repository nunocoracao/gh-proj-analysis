{
  "results": {
    "dockerfile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "composefile": {
      "exist": true,
      "count": 42,
      "rootCount": 0,
      "subFolderCount": 42,
      "filepaths": [
        "d.rymcg.tech.git/_attic/mailu/docker-compose.yaml",
        "d.rymcg.tech.git/archivebox/docker-compose.yaml",
        "d.rymcg.tech.git/baikal/docker-compose.yaml",
        "d.rymcg.tech.git/bitwarden_rs/docker-compose.yaml",
        "d.rymcg.tech.git/cryptpad/docker-compose.yaml",
        "d.rymcg.tech.git/drawio/docker-compose.yaml",
        "d.rymcg.tech.git/ejabberd/docker-compose.yaml",
        "d.rymcg.tech.git/filestash/docker-compose.yaml",
        "d.rymcg.tech.git/freshrss/docker-compose.yaml",
        "d.rymcg.tech.git/gitea/docker-compose.yaml",
        "d.rymcg.tech.git/github-actions-runner/docker-compose.yaml",
        "d.rymcg.tech.git/invidious/docker-compose.yaml",
        "d.rymcg.tech.git/jitsi-meet/docker-compose.yaml",
        "d.rymcg.tech.git/jupyterlab/docker-compose.yaml",
        "d.rymcg.tech.git/larynx/docker-compose.yaml",
        "d.rymcg.tech.git/matterbridge/docker-compose.yaml",
        "d.rymcg.tech.git/maubot/docker-compose.yaml",
        "d.rymcg.tech.git/minio/docker-compose.yaml",
        "d.rymcg.tech.git/mosquitto/docker-compose.yaml",
        "d.rymcg.tech.git/nextcloud/docker-compose.yaml",
        "d.rymcg.tech.git/nginx-webdav/docker-compose.yaml",
        "d.rymcg.tech.git/nodered/docker-compose.yaml",
        "d.rymcg.tech.git/ntfy.sh/docker-compose.yaml",
        "d.rymcg.tech.git/piwigo/docker-compose.yaml",
        "d.rymcg.tech.git/postgresql/docker-compose.yaml",
        "d.rymcg.tech.git/privatebin/docker-compose.yaml",
        "d.rymcg.tech.git/rdesktop/docker-compose.yaml",
        "d.rymcg.tech.git/s3-proxy/docker-compose.yaml",
        "d.rymcg.tech.git/sftp/docker-compose.instance.yaml",
        "d.rymcg.tech.git/sftp/docker-compose.yaml",
        "d.rymcg.tech.git/shaarli/docker-compose.yaml",
        "d.rymcg.tech.git/syncthing/docker-compose.yaml",
        "d.rymcg.tech.git/thttpd/docker-compose.yaml",
        "d.rymcg.tech.git/tiddlywiki-nodejs/docker-compose.yaml",
        "d.rymcg.tech.git/tiddlywiki-webdav/docker-compose.instance.yaml",
        "d.rymcg.tech.git/tiddlywiki-webdav/docker-compose.yaml",
        "d.rymcg.tech.git/traefik/docker-compose.yaml",
        "d.rymcg.tech.git/traefik-forward-auth/docker-compose.yaml",
        "d.rymcg.tech.git/ttrss/docker-compose.yaml",
        "d.rymcg.tech.git/websocketd/docker-compose.yaml",
        "d.rymcg.tech.git/whoami/docker-compose.yaml",
        "d.rymcg.tech.git/xbs/docker-compose.yaml"
      ]
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 354394886,
    "name": "d.rymcg.tech",
    "full_name": "EnigmaCurry/d.rymcg.tech",
    "owner": {
      "login": "EnigmaCurry",
      "html_url": "https://github.com/EnigmaCurry",
      "type": "User"
    },
    "html_url": "https://github.com/EnigmaCurry/d.rymcg.tech",
    "description": "A collection of self-hosted docker-compose projects with Traefik reverse proxy and administrative Makefiles for easy maintainance",
    "url": "https://api.github.com/repos/EnigmaCurry/d.rymcg.tech",
    "clone_url": "https://github.com/EnigmaCurry/d.rymcg.tech.git",
    "homepage": "",
    "size": 2017,
    "stargazers_count": 20,
    "watchers_count": 20,
    "language": "Shell"
  }
}