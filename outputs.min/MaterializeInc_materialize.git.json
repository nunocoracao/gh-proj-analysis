{
  "results": {
    "dockerfile": {
      "exist": true,
      "count": 26,
      "rootCount": 0,
      "subFolderCount": 26,
      "filepaths": [
        "MaterializeInc_materialize.git/.devcontainer/Dockerfile",
        "MaterializeInc_materialize.git/ci/builder/Dockerfile",
        "MaterializeInc_materialize.git/misc/dbt-materialize/Dockerfile",
        "MaterializeInc_materialize.git/misc/images/cli/Dockerfile",
        "MaterializeInc_materialize.git/misc/images/jobs/Dockerfile",
        "MaterializeInc_materialize.git/misc/images/materialized/Dockerfile",
        "MaterializeInc_materialize.git/misc/images/psql/Dockerfile",
        "MaterializeInc_materialize.git/misc/images/ubuntu-base/Dockerfile",
        "MaterializeInc_materialize.git/src/billing-demo/ci/Dockerfile",
        "MaterializeInc_materialize.git/src/clusterd/ci/Dockerfile",
        "MaterializeInc_materialize.git/src/environmentd/ci/Dockerfile",
        "MaterializeInc_materialize.git/src/kafka-util/ci/Dockerfile",
        "MaterializeInc_materialize.git/src/persist-client/ci/Dockerfile",
        "MaterializeInc_materialize.git/src/sqllogictest/ci/Dockerfile",
        "MaterializeInc_materialize.git/src/testdrive/ci/Dockerfile",
        "MaterializeInc_materialize.git/test/antithesis/cp-combined/Dockerfile",
        "MaterializeInc_materialize.git/test/antithesis/driver/Dockerfile",
        "MaterializeInc_materialize.git/test/antithesis/materialized/Dockerfile",
        "MaterializeInc_materialize.git/test/antithesis/testdrive/Dockerfile",
        "MaterializeInc_materialize.git/test/catalog-compat/catcompatck/Dockerfile",
        "MaterializeInc_materialize.git/test/chbench/chbench/Dockerfile",
        "MaterializeInc_materialize.git/test/lang/java/smoketest/Dockerfile",
        "MaterializeInc_materialize.git/test/metabase/smoketest/ci/Dockerfile",
        "MaterializeInc_materialize.git/test/perf-kinesis/ci/Dockerfile",
        "MaterializeInc_materialize.git/test/postgres/Dockerfile",
        "MaterializeInc_materialize.git/test/test-certs/Dockerfile"
      ]
    },
    "composefile": {
      "exist": true,
      "count": 2,
      "rootCount": 0,
      "subFolderCount": 2,
      "filepaths": [
        "MaterializeInc_materialize.git/.devcontainer/docker-compose.yml",
        "MaterializeInc_materialize.git/test/antithesis/driver/docker-compose.yml"
      ]
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 172104891,
    "name": "materialize",
    "full_name": "MaterializeInc/materialize",
    "owner": {
      "login": "MaterializeInc",
      "html_url": "https://github.com/MaterializeInc",
      "type": "Organization"
    },
    "html_url": "https://github.com/MaterializeInc/materialize",
    "description": "The Fastest Way to Build the Fastest Data Products. Build data-intensive applications and services in SQL — without pipelines or caches — using materialized views that are always up-to-date.",
    "url": "https://api.github.com/repos/MaterializeInc/materialize",
    "clone_url": "https://github.com/MaterializeInc/materialize.git",
    "homepage": "https://materialize.com",
    "size": 116162,
    "stargazers_count": 4698,
    "watchers_count": 4698,
    "language": "Rust"
  }
}