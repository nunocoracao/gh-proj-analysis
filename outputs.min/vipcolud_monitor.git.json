{
  "results": {
    "dockerfile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "composefile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 157840466,
    "name": "monitor",
    "full_name": "vipcolud/monitor",
    "owner": {
      "login": "vipcolud",
      "html_url": "https://github.com/vipcolud",
      "type": "User"
    },
    "html_url": "https://github.com/vipcolud/monitor",
    "description": "java生产环境内存调优（包括jvm参数类型，JVM的参数类型 jinfo & jps(参数和进程查看) jstat(类加载、垃圾收集、JIT 编译) jmap+MAT(内存溢出) jstack(线程、死循环、死锁) JVisualVM(本地和远程可视化监控) 使用 BTrace 进行拦截调试 Tomcat 性能监控与调优 Nginx 性能监控与调优 JVM 层 GC 调优 JAVA代码层调优 ）欢迎:star2::star2::star2::star2::star2::star2::star2::star2:",
    "url": "https://api.github.com/repos/vipcolud/monitor",
    "clone_url": "https://github.com/vipcolud/monitor.git",
    "homepage": "http://belongapp.fun/",
    "size": 65,
    "stargazers_count": 209,
    "watchers_count": 209,
    "language": "Java"
  }
}