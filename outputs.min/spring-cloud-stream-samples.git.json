{
  "results": {
    "dockerfile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "composefile": {
      "exist": true,
      "count": 48,
      "rootCount": 0,
      "subFolderCount": 48,
      "filepaths": [
        "spring-cloud-stream-samples.git/function-based-stream-app-samples/image-thumbnail-samples/image-thumbnail-stream-sample/docker-compose-apps.yml",
        "spring-cloud-stream-samples.git/function-based-stream-app-samples/image-thumbnail-samples/image-thumbnail-stream-sample/docker-compose-kafka.yml",
        "spring-cloud-stream-samples.git/kafka-batch-sample/docker-compose.yml",
        "spring-cloud-stream-samples.git/kafka-streams-samples/kafka-streams-aggregate/docker-compose.yml",
        "spring-cloud-stream-samples.git/kafka-streams-samples/kafka-streams-branching/docker-compose.yml",
        "spring-cloud-stream-samples.git/kafka-streams-samples/kafka-streams-dlq-sample/docker-compose.yml",
        "spring-cloud-stream-samples.git/kafka-streams-samples/kafka-streams-global-table-join/docker-compose.yml",
        "spring-cloud-stream-samples.git/kafka-streams-samples/kafka-streams-interactive-query-advanced/docker-compose.yml",
        "spring-cloud-stream-samples.git/kafka-streams-samples/kafka-streams-interactive-query-basic/docker-compose.yml",
        "spring-cloud-stream-samples.git/kafka-streams-samples/kafka-streams-jaas-security/docker-compose.yml",
        "spring-cloud-stream-samples.git/kafka-streams-samples/kafka-streams-message-channel/docker-compose.yml",
        "spring-cloud-stream-samples.git/kafka-streams-samples/kafka-streams-product-tracker/docker-compose.yml",
        "spring-cloud-stream-samples.git/kafka-streams-samples/kafka-streams-table-join/docker-compose.yml",
        "spring-cloud-stream-samples.git/kafka-streams-samples/kafka-streams-to-rabbitmq-message-channel/docker-compose.yml",
        "spring-cloud-stream-samples.git/kafka-streams-samples/kafka-streams-word-count/docker-compose.yml",
        "spring-cloud-stream-samples.git/multi-binder-samples/multi-binder-kafka-rabbit/docker-compose.yml",
        "spring-cloud-stream-samples.git/multi-binder-samples/multi-binder-kafka-streams/docker-compose.yml",
        "spring-cloud-stream-samples.git/multi-binder-samples/multi-binder-sendto-dest-header/docker-compose.yml",
        "spring-cloud-stream-samples.git/multi-binder-samples/multi-binder-two-kafka-clusters/docker-compose.yml",
        "spring-cloud-stream-samples.git/multi-functions-samples/function-composition-kafka/docker-compose.yml",
        "spring-cloud-stream-samples.git/multi-functions-samples/function-composition-rabbit/docker-compose.yml",
        "spring-cloud-stream-samples.git/multi-functions-samples/multi-functions-kafka/docker-compose.yml",
        "spring-cloud-stream-samples.git/multi-functions-samples/multi-functions-rabbit/docker-compose.yml",
        "spring-cloud-stream-samples.git/partitioning-samples/kafka-partitioning/docker-compose.yml",
        "spring-cloud-stream-samples.git/partitioning-samples/rabbit-partitioning/docker-compose.yml",
        "spring-cloud-stream-samples.git/processor-samples/polled-consumer/docker-compose.yml",
        "spring-cloud-stream-samples.git/processor-samples/reactive-processor-kafka/docker-compose-rabbit.yml",
        "spring-cloud-stream-samples.git/processor-samples/reactive-processor-kafka/docker-compose.yml",
        "spring-cloud-stream-samples.git/processor-samples/reactive-processor-rabbit/docker-compose.yml",
        "spring-cloud-stream-samples.git/processor-samples/sensor-average-reactive-kafka/docker-compose.yml",
        "spring-cloud-stream-samples.git/processor-samples/sensor-average-reactive-rabbit/docker-compose.yml",
        "spring-cloud-stream-samples.git/processor-samples/streamlistener-basic/docker-compose-rabbit.yml",
        "spring-cloud-stream-samples.git/processor-samples/streamlistener-basic/docker-compose.yml",
        "spring-cloud-stream-samples.git/processor-samples/uppercase-transformer/docker-compose-rabbit.yml",
        "spring-cloud-stream-samples.git/processor-samples/uppercase-transformer/docker-compose.yml",
        "spring-cloud-stream-samples.git/schema-registry-samples/docker-compose-mysql.yml",
        "spring-cloud-stream-samples.git/schema-registry-samples/docker-compose-postgres.yml",
        "spring-cloud-stream-samples.git/schema-registry-samples/schema-registry-confluent/docker-compose-control-center.yaml",
        "spring-cloud-stream-samples.git/schema-registry-samples/schema-registry-confluent/docker-compose.yml",
        "spring-cloud-stream-samples.git/schema-registry-samples/schema-registry-confluent-avro-serializer/docker-compose-control-center.yaml",
        "spring-cloud-stream-samples.git/schema-registry-samples/schema-registry-confluent-avro-serializer/docker-compose.yml",
        "spring-cloud-stream-samples.git/schema-registry-samples/schema-registry-vanilla-kafka-binder/docker-compose.yml",
        "spring-cloud-stream-samples.git/schema-registry-samples/schema-registry-vanilla-rabbit-binder/docker-compose.yml",
        "spring-cloud-stream-samples.git/schema-registry-samples/spring-schema-registry-kafka-standalone/docker-compose.yml",
        "spring-cloud-stream-samples.git/source-samples/dynamic-destination-source-kafka/docker-compose-rabbit.yml",
        "spring-cloud-stream-samples.git/source-samples/dynamic-destination-source-kafka/docker-compose.yml",
        "spring-cloud-stream-samples.git/source-samples/dynamic-destination-source-rabbit/docker-compose.yml",
        "spring-cloud-stream-samples.git/transaction-kafka-samples/docker-compose.yml"
      ]
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 52093316,
    "name": "spring-cloud-stream-samples",
    "full_name": "spring-cloud/spring-cloud-stream-samples",
    "owner": {
      "login": "spring-cloud",
      "html_url": "https://github.com/spring-cloud",
      "type": "Organization"
    },
    "html_url": "https://github.com/spring-cloud/spring-cloud-stream-samples",
    "description": "Samples for Spring Cloud Stream",
    "url": "https://api.github.com/repos/spring-cloud/spring-cloud-stream-samples",
    "clone_url": "https://github.com/spring-cloud/spring-cloud-stream-samples.git",
    "homepage": null,
    "size": 3581,
    "stargazers_count": 835,
    "watchers_count": 835,
    "language": "Java"
  }
}