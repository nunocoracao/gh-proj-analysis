{
  "results": {
    "dockerfile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "composefile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 54281271,
    "name": "QtQuick-with-cmake",
    "full_name": "mattfife/QtQuick-with-cmake",
    "owner": {
      "login": "mattfife",
      "html_url": "https://github.com/mattfife",
      "type": "User"
    },
    "html_url": "https://github.com/mattfife/QtQuick-with-cmake",
    "description": "QtQuick/QML using CMake for Visual Studio. This 'hello world' template project shows how to use cmake to build a standard QtQuick project that uses QML and C++",
    "url": "https://api.github.com/repos/mattfife/QtQuick-with-cmake",
    "clone_url": "https://github.com/mattfife/QtQuick-with-cmake.git",
    "homepage": "",
    "size": 12,
    "stargazers_count": 33,
    "watchers_count": 33,
    "language": "CMake"
  }
}