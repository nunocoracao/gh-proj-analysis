{
  "results": {
    "dockerfile": {
      "exist": true,
      "count": 29,
      "rootCount": 0,
      "subFolderCount": 29,
      "filepaths": [
        "grammarly_rocker.git/src/parser/testfiles/ADD-COPY-with-JSON/Dockerfile",
        "grammarly_rocker.git/src/parser/testfiles/brimstone-consuldock/Dockerfile",
        "grammarly_rocker.git/src/parser/testfiles/brimstone-docker-consul/Dockerfile",
        "grammarly_rocker.git/src/parser/testfiles/continueIndent/Dockerfile",
        "grammarly_rocker.git/src/parser/testfiles/cpuguy83-nagios/Dockerfile",
        "grammarly_rocker.git/src/parser/testfiles/docker/Dockerfile",
        "grammarly_rocker.git/src/parser/testfiles/env/Dockerfile",
        "grammarly_rocker.git/src/parser/testfiles/escapes/Dockerfile",
        "grammarly_rocker.git/src/parser/testfiles/flags/Dockerfile",
        "grammarly_rocker.git/src/parser/testfiles/influxdb/Dockerfile",
        "grammarly_rocker.git/src/parser/testfiles/jeztah-invalid-json-json-inside-string/Dockerfile",
        "grammarly_rocker.git/src/parser/testfiles/jeztah-invalid-json-json-inside-string-double/Dockerfile",
        "grammarly_rocker.git/src/parser/testfiles/jeztah-invalid-json-single-quotes/Dockerfile",
        "grammarly_rocker.git/src/parser/testfiles/jeztah-invalid-json-unterminated-bracket/Dockerfile",
        "grammarly_rocker.git/src/parser/testfiles/jeztah-invalid-json-unterminated-string/Dockerfile",
        "grammarly_rocker.git/src/parser/testfiles/json/Dockerfile",
        "grammarly_rocker.git/src/parser/testfiles/kartar-entrypoint-oddities/Dockerfile",
        "grammarly_rocker.git/src/parser/testfiles/lk4d4-the-edge-case-generator/Dockerfile",
        "grammarly_rocker.git/src/parser/testfiles/mail/Dockerfile",
        "grammarly_rocker.git/src/parser/testfiles/multiple-volumes/Dockerfile",
        "grammarly_rocker.git/src/parser/testfiles/mumble/Dockerfile",
        "grammarly_rocker.git/src/parser/testfiles/nginx/Dockerfile",
        "grammarly_rocker.git/src/parser/testfiles/tf2/Dockerfile",
        "grammarly_rocker.git/src/parser/testfiles/weechat/Dockerfile",
        "grammarly_rocker.git/src/parser/testfiles/znc/Dockerfile",
        "grammarly_rocker.git/src/parser/testfiles-negative/env_no_value/Dockerfile",
        "grammarly_rocker.git/src/parser/testfiles-negative/shykes-nested-json/Dockerfile",
        "grammarly_rocker.git/vendor/github.com/fsouza/go-dockerclient/testing/data/Dockerfile",
        "grammarly_rocker.git/vendor/github.com/fsouza/go-dockerclient/testing/data/dockerfile.tar"
      ]
    },
    "composefile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 42118261,
    "name": "rocker",
    "full_name": "grammarly/rocker",
    "owner": {
      "login": "grammarly",
      "html_url": "https://github.com/grammarly",
      "type": "Organization"
    },
    "html_url": "https://github.com/grammarly/rocker",
    "description": "Rocker breaks the limits of Dockerfile.",
    "url": "https://api.github.com/repos/grammarly/rocker",
    "clone_url": "https://github.com/grammarly/rocker.git",
    "homepage": null,
    "size": 5782,
    "stargazers_count": 1346,
    "watchers_count": 1346,
    "language": "Go"
  }
}