{
  "results": {
    "dockerfile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "composefile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 135500242,
    "name": "Serverless-Eventing-Platform-for-Microservices",
    "full_name": "Azure-Samples/Serverless-Eventing-Platform-for-Microservices",
    "owner": {
      "login": "Azure-Samples",
      "html_url": "https://github.com/Azure-Samples",
      "type": "Organization"
    },
    "html_url": "https://github.com/Azure-Samples/Serverless-Eventing-Platform-for-Microservices",
    "description": "This solution is a personal knowledge management system and it allows users to upload text, images, and audio into categories. Each of these types of data is managed by a dedicated microservice built on Azure serverless technologies including Azure Functions and Cognitive Services. The web front-end communicates with the microservices through a SignalR-to-Event Grid bridge, allowing for real-time reactive UI updates based on the microservice updates. Each microservice is built and deployed independently using VSTSâ€™s build and release management system, and use a variety of Azure-native data storage technologies.",
    "url": "https://api.github.com/repos/Azure-Samples/Serverless-Eventing-Platform-for-Microservices",
    "clone_url": "https://github.com/Azure-Samples/Serverless-Eventing-Platform-for-Microservices.git",
    "homepage": null,
    "size": 11313,
    "stargazers_count": 171,
    "watchers_count": 171,
    "language": "C#"
  }
}