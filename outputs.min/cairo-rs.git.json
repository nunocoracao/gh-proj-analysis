{
  "results": {
    "dockerfile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "composefile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 485838614,
    "name": "cairo-rs",
    "full_name": "lambdaclass/cairo-rs",
    "owner": {
      "login": "lambdaclass",
      "html_url": "https://github.com/lambdaclass",
      "type": "Organization"
    },
    "html_url": "https://github.com/lambdaclass/cairo-rs",
    "description": "cairo-rs is a Rust implementation of the Cairo VM. Cairo (CPU Algebraic Intermediate Representation) is a programming language for writing provable programs, where one party can prove to another that a certain computation was executed correctly. Cairo and similar proof systems can be used to provide scalability to blockchains.",
    "url": "https://api.github.com/repos/lambdaclass/cairo-rs",
    "clone_url": "https://github.com/lambdaclass/cairo-rs.git",
    "homepage": "https://lambdaclass.github.io/cairo-rs",
    "size": 9305,
    "stargazers_count": 257,
    "watchers_count": 257,
    "language": "Rust"
  }
}