{
  "results": {
    "dockerfile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "composefile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": true,
      "count": 63,
      "rootCount": 0,
      "subFolderCount": 63,
      "filepaths": [
        "lambda-the-terraform-way.git/samples/10/main.tf",
        "lambda-the-terraform-way.git/samples/10/output.tf",
        "lambda-the-terraform-way.git/samples/10/vars.tf",
        "lambda-the-terraform-way.git/samples/11/main.tf",
        "lambda-the-terraform-way.git/samples/11/output.tf",
        "lambda-the-terraform-way.git/samples/11/vars.tf",
        "lambda-the-terraform-way.git/samples/12/main.tf",
        "lambda-the-terraform-way.git/samples/12/output.tf",
        "lambda-the-terraform-way.git/samples/12/vars.tf",
        "lambda-the-terraform-way.git/samples/04/main.tf",
        "lambda-the-terraform-way.git/samples/04/output.tf",
        "lambda-the-terraform-way.git/samples/04/vars.tf",
        "lambda-the-terraform-way.git/samples/05/main.tf",
        "lambda-the-terraform-way.git/samples/05/output.tf",
        "lambda-the-terraform-way.git/samples/05/vars.tf",
        "lambda-the-terraform-way.git/samples/06/main.tf",
        "lambda-the-terraform-way.git/samples/06/output.tf",
        "lambda-the-terraform-way.git/samples/06/vars.tf",
        "lambda-the-terraform-way.git/samples/07/main.tf",
        "lambda-the-terraform-way.git/samples/07/output.tf",
        "lambda-the-terraform-way.git/samples/07/vars.tf",
        "lambda-the-terraform-way.git/samples/08/main.tf",
        "lambda-the-terraform-way.git/samples/08/output.tf",
        "lambda-the-terraform-way.git/samples/08/vars.tf",
        "lambda-the-terraform-way.git/samples/09/main.tf",
        "lambda-the-terraform-way.git/samples/09/output.tf",
        "lambda-the-terraform-way.git/samples/09/vars.tf",
        "lambda-the-terraform-way.git/samples/modules/api-gateway/main.tf",
        "lambda-the-terraform-way.git/samples/modules/api-gateway/output.tf",
        "lambda-the-terraform-way.git/samples/modules/api-gateway/vars.tf",
        "lambda-the-terraform-way.git/samples/modules/api-gateway-lambda-integration/main.tf",
        "lambda-the-terraform-way.git/samples/modules/api-gateway-lambda-integration/output.tf",
        "lambda-the-terraform-way.git/samples/modules/api-gateway-lambda-integration/vars.tf",
        "lambda-the-terraform-way.git/samples/modules/dynamodb/main.tf",
        "lambda-the-terraform-way.git/samples/modules/dynamodb/output.tf",
        "lambda-the-terraform-way.git/samples/modules/dynamodb-lambda-event-mapping/main.tf",
        "lambda-the-terraform-way.git/samples/modules/dynamodb-lambda-event-mapping/vars.tf",
        "lambda-the-terraform-way.git/samples/modules/iam/main.tf",
        "lambda-the-terraform-way.git/samples/modules/iam/output.tf",
        "lambda-the-terraform-way.git/samples/modules/iam/vars.tf",
        "lambda-the-terraform-way.git/samples/modules/kinesis/main.tf",
        "lambda-the-terraform-way.git/samples/modules/kinesis/output.tf",
        "lambda-the-terraform-way.git/samples/modules/kinesis/vars.tf",
        "lambda-the-terraform-way.git/samples/modules/kinesis-lambda-event-mapping/main.tf",
        "lambda-the-terraform-way.git/samples/modules/kinesis-lambda-event-mapping/vars.tf",
        "lambda-the-terraform-way.git/samples/modules/lambda/main.tf",
        "lambda-the-terraform-way.git/samples/modules/lambda/output.tf",
        "lambda-the-terraform-way.git/samples/modules/lambda/vars.tf",
        "lambda-the-terraform-way.git/samples/modules/lambda-layer/main.tf",
        "lambda-the-terraform-way.git/samples/modules/lambda-layer/output.tf",
        "lambda-the-terraform-way.git/samples/modules/lambda-layer/vars.tf",
        "lambda-the-terraform-way.git/samples/modules/lambda-role/main.tf",
        "lambda-the-terraform-way.git/samples/modules/lambda-role/output.tf",
        "lambda-the-terraform-way.git/samples/modules/s3/main.tf",
        "lambda-the-terraform-way.git/samples/modules/s3/output.tf",
        "lambda-the-terraform-way.git/samples/modules/s3/vars.tf",
        "lambda-the-terraform-way.git/samples/modules/s3-lambda-event-mapping/main.tf",
        "lambda-the-terraform-way.git/samples/modules/s3-lambda-event-mapping/vars.tf",
        "lambda-the-terraform-way.git/samples/modules/sqs/main.tf",
        "lambda-the-terraform-way.git/samples/modules/sqs/output.tf",
        "lambda-the-terraform-way.git/samples/modules/sqs/vars.tf",
        "lambda-the-terraform-way.git/samples/modules/sqs-lambda-event-mapping/main.tf",
        "lambda-the-terraform-way.git/samples/modules/sqs-lambda-event-mapping/vars.tf"
      ]
    }
  },
  "info": {
    "id": 320584633,
    "name": "lambda-the-terraform-way",
    "full_name": "nsriram/lambda-the-terraform-way",
    "owner": {
      "login": "nsriram",
      "html_url": "https://github.com/nsriram",
      "type": "User"
    },
    "html_url": "https://github.com/nsriram/lambda-the-terraform-way",
    "description": "AWS Lambda using Terraform., an Introductory Cookbook",
    "url": "https://api.github.com/repos/nsriram/lambda-the-terraform-way",
    "clone_url": "https://github.com/nsriram/lambda-the-terraform-way.git",
    "homepage": "",
    "size": 125,
    "stargazers_count": 1204,
    "watchers_count": 1204,
    "language": "Markdown"
  }
}