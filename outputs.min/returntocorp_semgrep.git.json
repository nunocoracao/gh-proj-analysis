{
  "results": {
    "dockerfile": {
      "exist": true,
      "count": 91,
      "rootCount": 1,
      "subFolderCount": 90,
      "filepaths": [
        "semgrep.git/Dockerfile",
        "semgrep.git/cli/tests/e2e/rules/spacegrep/dockerfile.yaml",
        "semgrep.git/cli/tests/e2e/targets/metavariable_propagation/metavariable-regex-const-prop.dockerfile",
        "semgrep.git/cli/tests/e2e/targets/spacegrep/root.Dockerfile",
        "semgrep.git/dockerfiles/linuxbrew.Dockerfile",
        "semgrep.git/dockerfiles/semgrep-dev.Dockerfile",
        "semgrep.git/dockerfiles/semgrep.Dockerfile",
        "semgrep.git/scripts/Dockerfile.16.04",
        "semgrep.git/semgrep-core/src/parsing/ast/AST_dockerfile.ml",
        "semgrep.git/semgrep-core/src/parsing/ast/Dockerfile_to_generic.ml",
        "semgrep.git/semgrep-core/src/parsing/ast/Dockerfile_to_generic.mli",
        "semgrep.git/semgrep-core/src/parsing/tree_sitter/Parse_dockerfile_tree_sitter.ml",
        "semgrep.git/semgrep-core/src/parsing/tree_sitter/Parse_dockerfile_tree_sitter.mli",
        "semgrep.git/semgrep-core/tests/parsing/dockerfile/semgrep.dockerfile",
        "semgrep.git/semgrep-core/tests/parsing/dockerfile/user.dockerfile",
        "semgrep.git/semgrep-core/tests/parsing/dockerfile/todo/numeric-user.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/add-chown.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/add.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/arg-default-metavar.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/arg-metavar.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/arg.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/array-ellipsis.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/array-metavariable.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/cmd-argv.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/cmd-shell.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/cmd.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/concrete_syntax.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/copy-chown.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/copy-ellipsis.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/copy-metavar.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/copy-multiple-files.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/copy-param.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/copy.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/dots_args.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/dots_nested_stmts.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/dots_stmts.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/dots_string.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/entrypoint.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/env-const-prop.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/env-key-one-char.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/env-val-metavar.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/env.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/expose-ellipsis.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/expose-metavar.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/expose.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/from-alias-reuse.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/from-as.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/from-digest-metavar.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/from-param.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/from-tag-metavar.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/from.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/from2.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/healthcheck-metavar.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/healthcheck-none.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/healthcheck-options.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/healthcheck.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/instruction-ellipsis.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/instruction-metavariable.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/label-ellipsis.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/label-metavar.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/label.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/maintainer-metavar.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/maintainer.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/metavar-backref.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/metavar_arg.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/metavar_call.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/metavar_equality_var.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/no-trailing-newline.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/onbuild.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/run-anchored.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/run-argv.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/run-param-metavar.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/run-param-mount-metavar.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/run-param.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/run.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/shell.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/stopsignal-metavar.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/stopsignal.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/user-group-expansion.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/user-group-metavar.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/user-group.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/user.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/volume-ellipsis.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/volume-metavar.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/volume.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/workdir-metavar.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/workdir.dockerfile",
        "semgrep.git/semgrep-core/tests/patterns/dockerfile/todo/env-key-metavar.dockerfile",
        "semgrep.git/semgrep-core/tests/rules/compare-exposed-port.dockerfile",
        "semgrep.git/semgrep-core/tests/rules/option_implicit_exprstmt.dockerfile",
        "semgrep.git/semgrep-core/tests/rules/spacegrep_metavarbug.dockerfile"
      ]
    },
    "composefile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "devcontainer": {
      "exist": true,
      "count": 1,
      "rootCount": 0,
      "subFolderCount": 1,
      "filepaths": [
        "semgrep.git/.devcontainer/devcontainer.json"
      ]
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": true,
      "count": 20,
      "rootCount": 0,
      "subFolderCount": 20,
      "filepaths": [
        "semgrep.git/cli/tests/e2e/snapshots/test_autofix/test_autofix/rulesautofixterraform-ec2-instance-metadata-options.yaml-autofixterraform-ec2-instance-metadata-options.hcl-dryrun/autofix/terraform-ec2-instance-metadata-options.hcl-dryrun",
        "semgrep.git/cli/tests/e2e/snapshots/test_autofix/test_autofix/rulesautofixterraform-ec2-instance-metadata-options.yaml-autofixterraform-ec2-instance-metadata-options.hcl-not-dryrun/autofix/terraform-ec2-instance-metadata-options.hcl-fixed",
        "semgrep.git/cli/tests/e2e/targets/autofix/terraform-ec2-instance-metadata-options.hcl",
        "semgrep.git/cli/tests/e2e/targets/spacegrep/terraform.tf",
        "semgrep.git/semgrep-core/tests/patterns/hcl/concrete_syntax.tf",
        "semgrep.git/semgrep-core/tests/patterns/hcl/dots_args.tf",
        "semgrep.git/semgrep-core/tests/patterns/hcl/dots_fields.tf",
        "semgrep.git/semgrep-core/tests/patterns/hcl/dots_objects.tf",
        "semgrep.git/semgrep-core/tests/patterns/hcl/dots_resource.tf",
        "semgrep.git/semgrep-core/tests/patterns/hcl/dots_string.tf",
        "semgrep.git/semgrep-core/tests/patterns/hcl/dots_top.tf",
        "semgrep.git/semgrep-core/tests/patterns/hcl/equivalence_constant_propagation.tf",
        "semgrep.git/semgrep-core/tests/patterns/hcl/equivalence_constant_propagation2.tf",
        "semgrep.git/semgrep-core/tests/patterns/hcl/metavar_arg.tf",
        "semgrep.git/semgrep-core/tests/patterns/hcl/metavar_call.tf",
        "semgrep.git/semgrep-core/tests/patterns/hcl/metavar_equality_var.tf",
        "semgrep.git/semgrep-core/tests/rules/misc_terraform1.tf",
        "semgrep.git/semgrep-core/tests/rules/terraform_metavariable.tf",
        "semgrep.git/semgrep-core/tests/rules/terraform_nested_yaml.tf",
        "semgrep.git/semgrep-core/tests/rules/whole_file.tf"
      ]
    }
  },
  "info": {
    "id": 227803815,
    "name": "semgrep",
    "full_name": "returntocorp/semgrep",
    "owner": {
      "login": "returntocorp",
      "html_url": "https://github.com/returntocorp",
      "type": "Organization"
    },
    "html_url": "https://github.com/returntocorp/semgrep",
    "description": "Lightweight static analysis for many languages. Find bug variants with patterns that look like source code.",
    "url": "https://api.github.com/repos/returntocorp/semgrep",
    "clone_url": "https://github.com/returntocorp/semgrep.git",
    "homepage": "https://semgrep.dev",
    "size": 44594,
    "stargazers_count": 7488,
    "watchers_count": 7488,
    "language": "OCaml"
  }
}