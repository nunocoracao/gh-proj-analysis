{
  "results": {
    "dockerfile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "composefile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 66939966,
    "name": "lrucache11",
    "full_name": "mohaps/lrucache11",
    "owner": {
      "login": "mohaps",
      "html_url": "https://github.com/mohaps",
      "type": "User"
    },
    "html_url": "https://github.com/mohaps/lrucache11",
    "description": "A header only C++11 LRU Cache template class that allows you to define key, value and optionally the Map type. uses a double linked list and a std::unordered_map style container to provide fast insert, delete and update  No dependencies other than the C++ standard library. This is a C++11 remake of my earlier LRUCache project (https://github.com/mohaps/lrucache)  The goal was to create a fast LRUCache header only library and to avoid any dependencies like boost.",
    "url": "https://api.github.com/repos/mohaps/lrucache11",
    "clone_url": "https://github.com/mohaps/lrucache11.git",
    "homepage": "https://github.com/mohaps/lrucache11",
    "size": 24,
    "stargazers_count": 259,
    "watchers_count": 259,
    "language": "C++"
  }
}