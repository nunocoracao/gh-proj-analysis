{
  "results": {
    "dockerfile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "composefile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 408012563,
    "name": "grpcstreamdemo",
    "full_name": "elcioabrahao/grpcstreamdemo",
    "owner": {
      "login": "elcioabrahao",
      "html_url": "https://github.com/elcioabrahao",
      "type": "User"
    },
    "html_url": "https://github.com/elcioabrahao/grpcstreamdemo",
    "description": "Exemplo de gRPC com Streaming onde um Server chama outros 3. Implementado a partir de: https://www.cncf.io/blog/2021/08/04/grpc-in-action-example-using-java-microservices/",
    "url": "https://api.github.com/repos/elcioabrahao/grpcstreamdemo",
    "clone_url": "https://github.com/elcioabrahao/grpcstreamdemo.git",
    "homepage": "",
    "size": 59,
    "stargazers_count": 1,
    "watchers_count": 1,
    "language": "Java"
  }
}