{
  "results": {
    "dockerfile": {
      "exist": true,
      "count": 1,
      "rootCount": 1,
      "subFolderCount": 0,
      "filepaths": [
        "roo.git/Dockerfile"
      ]
    },
    "composefile": {
      "exist": true,
      "count": 3,
      "rootCount": 3,
      "subFolderCount": 0,
      "filepaths": [
        "roo.git/nats-docker-compose.yml",
        "roo.git/roo-docker-compose.yml",
        "roo.git/test-docker-compose.yml"
      ]
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 254530567,
    "name": "roo",
    "full_name": "sfproductlabs/roo",
    "owner": {
      "login": "sfproductlabs",
      "html_url": "https://github.com/sfproductlabs",
      "type": "Organization"
    },
    "html_url": "https://github.com/sfproductlabs/roo",
    "description": "Setup and run your own clusters on your own infrastructure in minutes (Eg. ECS or EKS). Roo is a zero config distributed ingress, edge-router & reverse-proxy (supporting multiple letsencrypt/https hosts) using Docker Swarm. No dependencies.",
    "url": "https://api.github.com/repos/sfproductlabs/roo",
    "clone_url": "https://github.com/sfproductlabs/roo.git",
    "homepage": "",
    "size": 570,
    "stargazers_count": 55,
    "watchers_count": 55,
    "language": "Go"
  }
}