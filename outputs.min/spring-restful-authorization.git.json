{
  "results": {
    "dockerfile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "composefile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 39999732,
    "name": "spring-restful-authorization",
    "full_name": "ScienJus/spring-restful-authorization",
    "owner": {
      "login": "ScienJus",
      "html_url": "https://github.com/ScienJus",
      "type": "User"
    },
    "html_url": "https://github.com/ScienJus/spring-restful-authorization",
    "description": "这个 Demo 用于演示如何在 RESTful 下使用自定义 Token 保持客户端登录状态，依靠 Spring 的拦截器和解析器完成权限验证及登录用户注入，并使用 Redis 存储 Token。",
    "url": "https://api.github.com/repos/ScienJus/spring-restful-authorization",
    "clone_url": "https://github.com/ScienJus/spring-restful-authorization.git",
    "homepage": "",
    "size": 1105,
    "stargazers_count": 856,
    "watchers_count": 856,
    "language": "Java"
  }
}