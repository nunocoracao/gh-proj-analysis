{
  "results": {
    "dockerfile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "composefile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 143062351,
    "name": "serverless-lambdaless-apigateway-dynamodb",
    "full_name": "astarwolf/serverless-lambdaless-apigateway-dynamodb",
    "owner": {
      "login": "astarwolf",
      "html_url": "https://github.com/astarwolf",
      "type": "User"
    },
    "html_url": "https://github.com/astarwolf/serverless-lambdaless-apigateway-dynamodb",
    "description": "In this repo, I loose the Lambda altogether and have API Gateway directly invoke DynamoDB, to create a full suite of create, read, update, and delete (CRUD) operations. Other posts I've read only cover how to partially do this manually in the AWS console and not in code using Swagger and SAM, which is what I will show you here. Using Swagger and SAM to deploy the infrastructure and API is realistically what you absolutely want to do to release it to a production environment for minimising human error, repeatability and scalability.",
    "url": "https://api.github.com/repos/astarwolf/serverless-lambdaless-apigateway-dynamodb",
    "clone_url": "https://github.com/astarwolf/serverless-lambdaless-apigateway-dynamodb.git",
    "homepage": "",
    "size": 59,
    "stargazers_count": 23,
    "watchers_count": 23,
    "language": "Shell"
  }
}