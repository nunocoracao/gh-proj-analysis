{
  "results": {
    "dockerfile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "composefile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 2709176,
    "name": "ReflectiveDLLInjection",
    "full_name": "stephenfewer/ReflectiveDLLInjection",
    "owner": {
      "login": "stephenfewer",
      "html_url": "https://github.com/stephenfewer",
      "type": "User"
    },
    "html_url": "https://github.com/stephenfewer/ReflectiveDLLInjection",
    "description": "Reflective DLL injection is a library injection technique in which the concept of reflective programming is employed to perform the loading of a library from memory into a host process.",
    "url": "https://api.github.com/repos/stephenfewer/ReflectiveDLLInjection",
    "clone_url": "https://github.com/stephenfewer/ReflectiveDLLInjection.git",
    "homepage": "",
    "size": 563,
    "stargazers_count": 2071,
    "watchers_count": 2071,
    "language": "C"
  }
}