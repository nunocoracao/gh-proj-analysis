{
  "results": {
    "dockerfile": {
      "exist": true,
      "count": 11,
      "rootCount": 3,
      "subFolderCount": 8,
      "filepaths": [
        "function-mesh.git/Dockerfile",
        "function-mesh.git/operator.Dockerfile",
        "function-mesh.git/redhat.Dockerfile",
        "function-mesh.git/images/pulsar-functions-base-runner/Dockerfile",
        "function-mesh.git/images/pulsar-functions-go-runner/Dockerfile",
        "function-mesh.git/images/pulsar-functions-java-runner/Dockerfile",
        "function-mesh.git/images/pulsar-functions-python-runner/Dockerfile",
        "function-mesh.git/images/samples/go-function-samples/Dockerfile",
        "function-mesh.git/images/samples/java-function-samples/Dockerfile",
        "function-mesh.git/images/samples/pulsar-io-connector/pulsar-io-elasticsearch/Dockerfile",
        "function-mesh.git/images/samples/python-function-samples/Dockerfile"
      ]
    },
    "composefile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": true,
      "count": 10,
      "rootCount": 0,
      "subFolderCount": 10,
      "filepaths": [
        "function-mesh.git/config/certmanager/kustomization.yaml",
        "function-mesh.git/config/crd/kustomization.yaml",
        "function-mesh.git/config/default/kustomization.yaml",
        "function-mesh.git/config/manager/kustomization.yaml",
        "function-mesh.git/config/manifests/kustomization.yaml",
        "function-mesh.git/config/prometheus/kustomization.yaml",
        "function-mesh.git/config/rbac/kustomization.yaml",
        "function-mesh.git/config/samples/kustomization.yaml",
        "function-mesh.git/config/scorecard/kustomization.yaml",
        "function-mesh.git/config/webhook/kustomization.yaml"
      ]
    },
    "helm": {
      "exist": true,
      "count": 4,
      "rootCount": 0,
      "subFolderCount": 4,
      "filepaths": [
        "function-mesh.git/.github/workflows/test-helm-charts.yml",
        "function-mesh.git/charts/function-mesh-operator/Chart.yaml",
        "function-mesh.git/charts/function-mesh-operator/charts/admission-webhook/Chart.yaml",
        "function-mesh.git/charts/function-mesh-secrets-webhook/Chart.yaml"
      ]
    },
    "k8s": {
      "exist": true,
      "count": 7,
      "rootCount": 0,
      "subFolderCount": 7,
      "filepaths": [
        "function-mesh.git/.ci/clusters/mesh_worker_service_integration_test_pulsar_config.yaml",
        "function-mesh.git/charts/function-mesh-operator/templates/controller-manager-configmap.yaml",
        "function-mesh.git/charts/function-mesh-operator/templates/controller-manager-deployment.yaml",
        "function-mesh.git/config/manifests/bases/function-mesh.clusterserviceversion.yaml",
        "function-mesh.git/config/rbac/auth_proxy_service.yaml",
        "function-mesh.git/config/rbac/service_account.yaml",
        "function-mesh.git/config/webhook/service.yaml"
      ]
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 298439529,
    "name": "function-mesh",
    "full_name": "streamnative/function-mesh",
    "owner": {
      "login": "streamnative",
      "html_url": "https://github.com/streamnative",
      "type": "Organization"
    },
    "html_url": "https://github.com/streamnative/function-mesh",
    "description": "The serverless framework purpose-built for event streaming applications.",
    "url": "https://api.github.com/repos/streamnative/function-mesh",
    "clone_url": "https://github.com/streamnative/function-mesh.git",
    "homepage": "https://functionmesh.io/",
    "size": 25530,
    "stargazers_count": 178,
    "watchers_count": 178,
    "language": "Go"
  }
}