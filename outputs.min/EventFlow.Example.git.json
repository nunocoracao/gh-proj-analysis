{
  "results": {
    "dockerfile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "composefile": {
      "exist": true,
      "count": 1,
      "rootCount": 0,
      "subFolderCount": 1,
      "filepaths": [
        "EventFlow.Example.git/build/docker-compose.yml"
      ]
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 222979230,
    "name": "EventFlow.Example",
    "full_name": "OKTAYKIR/EventFlow.Example",
    "owner": {
      "login": "OKTAYKIR",
      "html_url": "https://github.com/OKTAYKIR",
      "type": "User"
    },
    "html_url": "https://github.com/OKTAYKIR/EventFlow.Example",
    "description": "DDD+CQRS+Event-sourcing examples using EventFlow following CQRS-ES architecture. It is configured with RabbitMQ, MongoDB(Snapshot store), PostgreSQL(Read store), EventStore(GES). It's targeted to .Net Core 2.2 and include docker compose file.",
    "url": "https://api.github.com/repos/OKTAYKIR/EventFlow.Example",
    "clone_url": "https://github.com/OKTAYKIR/EventFlow.Example.git",
    "homepage": "",
    "size": 184,
    "stargazers_count": 183,
    "watchers_count": 183,
    "language": "C#"
  }
}