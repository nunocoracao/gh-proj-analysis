{
  "results": {
    "dockerfile": {
      "exist": true,
      "count": 18,
      "rootCount": 0,
      "subFolderCount": 18,
      "filepaths": [
        "eyupgevenim_EventBus.git/src/Samples/Sample.ActiveMQ.Consumer/Dockerfile",
        "eyupgevenim_EventBus.git/src/Samples/Sample.ActiveMQ.Producer/Dockerfile",
        "eyupgevenim_EventBus.git/src/Samples/Sample.AmazonSQS.Consumer/Dockerfile",
        "eyupgevenim_EventBus.git/src/Samples/Sample.AmazonSQS.Producer/Dockerfile",
        "eyupgevenim_EventBus.git/src/Samples/Sample.AzureStorageQueues.Consumer/Dockerfile",
        "eyupgevenim_EventBus.git/src/Samples/Sample.AzureStorageQueues.Consumer/Dockerfile.linux",
        "eyupgevenim_EventBus.git/src/Samples/Sample.AzureStorageQueues.Producer/Dockerfile",
        "eyupgevenim_EventBus.git/src/Samples/Sample.AzureStorageQueues.Producer/Dockerfile.linux",
        "eyupgevenim_EventBus.git/src/Samples/Sample.GoogleCloudPubSub.Consumer/Dockerfile",
        "eyupgevenim_EventBus.git/src/Samples/Sample.GoogleCloudPubSub.Producer/Dockerfile",
        "eyupgevenim_EventBus.git/src/Samples/Sample.IBMMQ.Consumer/Dockerfile",
        "eyupgevenim_EventBus.git/src/Samples/Sample.IBMMQ.Producer/Dockerfile",
        "eyupgevenim_EventBus.git/src/Samples/Sample.Kafka.Consumer/Dockerfile",
        "eyupgevenim_EventBus.git/src/Samples/Sample.Kafka.Producer/Dockerfile",
        "eyupgevenim_EventBus.git/src/Samples/Sample.RabbitMQ.Consumer/Dockerfile",
        "eyupgevenim_EventBus.git/src/Samples/Sample.RabbitMQ.Producer/Dockerfile",
        "eyupgevenim_EventBus.git/src/Samples/Sample.ServiceBus.Consumer/Dockerfile",
        "eyupgevenim_EventBus.git/src/Samples/Sample.ServiceBus.Producer/Dockerfile"
      ]
    },
    "composefile": {
      "exist": true,
      "count": 8,
      "rootCount": 8,
      "subFolderCount": 0,
      "filepaths": [
        "eyupgevenim_EventBus.git/docker-compose.activemq.yml",
        "eyupgevenim_EventBus.git/docker-compose.amazonsqs.yml",
        "eyupgevenim_EventBus.git/docker-compose.azurestoragequeues.yml",
        "eyupgevenim_EventBus.git/docker-compose.googlecloudpubsub.yml",
        "eyupgevenim_EventBus.git/docker-compose.ibmmq.yml",
        "eyupgevenim_EventBus.git/docker-compose.kafka.yml",
        "eyupgevenim_EventBus.git/docker-compose.rabbitmq.yml",
        "eyupgevenim_EventBus.git/docker-compose.servicebus.yml"
      ]
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 327085597,
    "name": "EventBus",
    "full_name": "eyupgevenim/EventBus",
    "owner": {
      "login": "eyupgevenim",
      "html_url": "https://github.com/eyupgevenim",
      "type": "User"
    },
    "html_url": "https://github.com/eyupgevenim/EventBus",
    "description": "All Message Queue (MQ) Software producer and consumer (ActiveMQ, AmazonSQS, AzureStorageQueues, GoogleCloudPubSub, IBMMQ, Kafka, RabbitMQ, ServiceBus ...) samples with .NET Core and deploy docker",
    "url": "https://api.github.com/repos/eyupgevenim/EventBus",
    "clone_url": "https://github.com/eyupgevenim/EventBus.git",
    "homepage": "",
    "size": 70,
    "stargazers_count": 8,
    "watchers_count": 8,
    "language": "C#"
  }
}