{
  "results": {
    "dockerfile": {
      "exist": true,
      "count": 16,
      "rootCount": 0,
      "subFolderCount": 16,
      "filepaths": [
        "weaver-dlt-interoperability.git/core/drivers/corda-driver/Dockerfile.local",
        "weaver-dlt-interoperability.git/core/drivers/corda-driver/Dockerfile.remote",
        "weaver-dlt-interoperability.git/core/drivers/fabric-driver/fabricDriver.dockerfile",
        "weaver-dlt-interoperability.git/core/drivers/fabric-driver/fabricDriver.dockerfile.local",
        "weaver-dlt-interoperability.git/core/identity-management/iin-agent/iinagent.Dockerfile",
        "weaver-dlt-interoperability.git/core/identity-management/iin-agent/iinagent.local.Dockerfile",
        "weaver-dlt-interoperability.git/core/network/fabric-interop-cc/Dockerfile",
        "weaver-dlt-interoperability.git/core/relay/Dockerfile",
        "weaver-dlt-interoperability.git/core/relay/Dockerfile.client",
        "weaver-dlt-interoperability.git/core/relay/Dockerfile.driver",
        "weaver-dlt-interoperability.git/core/relay/Dockerfile.server",
        "weaver-dlt-interoperability.git/samples/corda/corda-simple-application/Dockerfile",
        "weaver-dlt-interoperability.git/samples/fabric/fabric-cli/Dockerfile",
        "weaver-dlt-interoperability.git/samples/fabric/simplestate/Dockerfile",
        "weaver-dlt-interoperability.git/samples/fabric/simplestatewithacl/Dockerfile",
        "weaver-dlt-interoperability.git/tests/network-setups/test/fabric/chaincode/sacc/Dockerfile"
      ]
    },
    "composefile": {
      "exist": true,
      "count": 14,
      "rootCount": 0,
      "subFolderCount": 14,
      "filepaths": [
        "weaver-dlt-interoperability.git/core/drivers/corda-driver/docker-compose.yaml",
        "weaver-dlt-interoperability.git/core/drivers/fabric-driver/docker-compose.yml",
        "weaver-dlt-interoperability.git/core/identity-management/iin-agent/docker-compose.yml",
        "weaver-dlt-interoperability.git/core/network/fabric-interop-cc/docker-compose.yml",
        "weaver-dlt-interoperability.git/core/relay/docker-compose.yaml",
        "weaver-dlt-interoperability.git/samples/fabric/fabric-cli/docker-compose.yaml",
        "weaver-dlt-interoperability.git/tests/network-setups/corda/dev/Corda_Network/docker-compose.yml",
        "weaver-dlt-interoperability.git/tests/network-setups/corda/dev/Corda_Network2/docker-compose.yml",
        "weaver-dlt-interoperability.git/tests/network-setups/corda/shared/Corda_Network/nodes/docker-compose.yml",
        "weaver-dlt-interoperability.git/tests/network-setups/corda/shared/Corda_Network2/nodes/docker-compose.yml",
        "weaver-dlt-interoperability.git/tests/network-setups/fabric/dev/docker/docker-compose-ca.yaml",
        "weaver-dlt-interoperability.git/tests/network-setups/fabric/dev/docker/docker-compose-couch.yaml",
        "weaver-dlt-interoperability.git/tests/network-setups/fabric/dev/docker/docker-compose-test-net.yaml",
        "weaver-dlt-interoperability.git/tests/network-setups/test/fabric/chaincode/sacc/docker-compose.yaml"
      ]
    }
  },
  "info": {
    "id": 350785898,
    "name": "weaver-dlt-interoperability",
    "full_name": "hyperledger-labs/weaver-dlt-interoperability",
    "owner": {
      "login": "hyperledger-labs",
      "html_url": "https://github.com/hyperledger-labs",
      "type": "Organization"
    },
    "html_url": "https://github.com/hyperledger-labs/weaver-dlt-interoperability",
    "description": "A platform, a protocol suite, and a set of tools, to enable interoperation for data sharing and asset movements between independent networks built on heterogeneous blockchain, or more generally, distributed ledger, technologies, in a manner that preserves the core blockchain tenets of decentralization and security.",
    "url": "https://api.github.com/repos/hyperledger-labs/weaver-dlt-interoperability",
    "clone_url": "https://github.com/hyperledger-labs/weaver-dlt-interoperability.git",
    "homepage": null,
    "size": 98573,
    "stargazers_count": 47,
    "watchers_count": 47,
    "language": "Kotlin"
  }
}