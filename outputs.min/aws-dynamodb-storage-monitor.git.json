{
  "results": {
    "dockerfile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "composefile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 128967245,
    "name": "aws-dynamodb-storage-monitor",
    "full_name": "awslabs/aws-dynamodb-storage-monitor",
    "owner": {
      "login": "awslabs",
      "html_url": "https://github.com/awslabs",
      "type": "Organization"
    },
    "html_url": "https://github.com/awslabs/aws-dynamodb-storage-monitor",
    "description": "A Python code (Lambda function) which will help to get storage info all DynamoDB tables in a region and publish that metrics in CloudWatch periodically. A cloudFormation template - Since DynamoDb do not have any storage metrics - this CF template will help customer to trigger the Lambda code (Python code) in every 6 hours to push storage utilization info to cloudWatch",
    "url": "https://api.github.com/repos/awslabs/aws-dynamodb-storage-monitor",
    "clone_url": "https://github.com/awslabs/aws-dynamodb-storage-monitor.git",
    "homepage": null,
    "size": 10,
    "stargazers_count": 13,
    "watchers_count": 13,
    "language": "Python"
  }
}