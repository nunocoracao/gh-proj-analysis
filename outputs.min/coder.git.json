{
  "results": {
    "dockerfile": {
      "exist": true,
      "count": 7,
      "rootCount": 1,
      "subFolderCount": 6,
      "filepaths": [
        "coder.git/Dockerfile",
        "coder.git/.devcontainer/Dockerfile",
        "coder.git/dogfood/Dockerfile",
        "coder.git/examples/templates/docker/build/Dockerfile",
        "coder.git/examples/templates/docker-image-builds/images/base.Dockerfile",
        "coder.git/examples/templates/docker-image-builds/images/java.Dockerfile",
        "coder.git/examples/templates/docker-image-builds/images/node.Dockerfile"
      ]
    },
    "composefile": {
      "exist": true,
      "count": 2,
      "rootCount": 1,
      "subFolderCount": 1,
      "filepaths": [
        "coder.git/docker-compose.yaml",
        "coder.git/examples/web-server/caddy/docker-compose.yaml"
      ]
    },
    "devcontainer": {
      "exist": true,
      "count": 1,
      "rootCount": 0,
      "subFolderCount": 1,
      "filepaths": [
        "coder.git/.devcontainer/devcontainer.json"
      ]
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": true,
      "count": 1,
      "rootCount": 0,
      "subFolderCount": 1,
      "filepaths": [
        "coder.git/helm/Chart.yaml"
      ]
    },
    "k8s": {
      "exist": true,
      "count": 1,
      "rootCount": 0,
      "subFolderCount": 1,
      "filepaths": [
        "coder.git/helm/templates/service.yaml"
      ]
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": true,
      "count": 52,
      "rootCount": 0,
      "subFolderCount": 52,
      "filepaths": [
        "coder.git/dogfood/main.tf",
        "coder.git/examples/templates/aws-ecs-container/main.tf",
        "coder.git/examples/templates/aws-linux/main.tf",
        "coder.git/examples/templates/aws-windows/main.tf",
        "coder.git/examples/templates/azure-linux/cloud-config.yaml.tftpl",
        "coder.git/examples/templates/azure-linux/main.tf",
        "coder.git/examples/templates/do-linux/cloud-config.yaml.tftpl",
        "coder.git/examples/templates/do-linux/main.tf",
        "coder.git/examples/templates/docker/main.tf",
        "coder.git/examples/templates/docker-code-server/main.tf",
        "coder.git/examples/templates/docker-image-builds/main.tf",
        "coder.git/examples/templates/docker-with-dotfiles/main.tf",
        "coder.git/examples/templates/gcp-linux/main.tf",
        "coder.git/examples/templates/gcp-vm-container/main.tf",
        "coder.git/examples/templates/gcp-windows/main.tf",
        "coder.git/examples/templates/kubernetes/main.tf",
        "coder.git/provisioner/terraform/testdata/calling-module/calling-module.tf",
        "coder.git/provisioner/terraform/testdata/calling-module/calling-module.tfplan.dot",
        "coder.git/provisioner/terraform/testdata/calling-module/calling-module.tfplan.json",
        "coder.git/provisioner/terraform/testdata/calling-module/calling-module.tfstate.dot",
        "coder.git/provisioner/terraform/testdata/calling-module/calling-module.tfstate.json",
        "coder.git/provisioner/terraform/testdata/calling-module/module/module.tf",
        "coder.git/provisioner/terraform/testdata/chaining-resources/chaining-resources.tf",
        "coder.git/provisioner/terraform/testdata/chaining-resources/chaining-resources.tfplan.dot",
        "coder.git/provisioner/terraform/testdata/chaining-resources/chaining-resources.tfplan.json",
        "coder.git/provisioner/terraform/testdata/chaining-resources/chaining-resources.tfstate.dot",
        "coder.git/provisioner/terraform/testdata/chaining-resources/chaining-resources.tfstate.json",
        "coder.git/provisioner/terraform/testdata/conflicting-resources/conflicting-resources.tf",
        "coder.git/provisioner/terraform/testdata/conflicting-resources/conflicting-resources.tfplan.dot",
        "coder.git/provisioner/terraform/testdata/conflicting-resources/conflicting-resources.tfplan.json",
        "coder.git/provisioner/terraform/testdata/conflicting-resources/conflicting-resources.tfstate.dot",
        "coder.git/provisioner/terraform/testdata/conflicting-resources/conflicting-resources.tfstate.json",
        "coder.git/provisioner/terraform/testdata/instance-id/instance-id.tf",
        "coder.git/provisioner/terraform/testdata/instance-id/instance-id.tfplan.dot",
        "coder.git/provisioner/terraform/testdata/instance-id/instance-id.tfplan.json",
        "coder.git/provisioner/terraform/testdata/instance-id/instance-id.tfstate.dot",
        "coder.git/provisioner/terraform/testdata/instance-id/instance-id.tfstate.json",
        "coder.git/provisioner/terraform/testdata/multiple-agents/multiple-agents.tf",
        "coder.git/provisioner/terraform/testdata/multiple-agents/multiple-agents.tfplan.dot",
        "coder.git/provisioner/terraform/testdata/multiple-agents/multiple-agents.tfplan.json",
        "coder.git/provisioner/terraform/testdata/multiple-agents/multiple-agents.tfstate.dot",
        "coder.git/provisioner/terraform/testdata/multiple-agents/multiple-agents.tfstate.json",
        "coder.git/provisioner/terraform/testdata/multiple-apps/multiple-apps.tf",
        "coder.git/provisioner/terraform/testdata/multiple-apps/multiple-apps.tfplan.dot",
        "coder.git/provisioner/terraform/testdata/multiple-apps/multiple-apps.tfplan.json",
        "coder.git/provisioner/terraform/testdata/multiple-apps/multiple-apps.tfstate.dot",
        "coder.git/provisioner/terraform/testdata/multiple-apps/multiple-apps.tfstate.json",
        "coder.git/provisioner/terraform/testdata/resource-metadata/resource-metadata.tf",
        "coder.git/provisioner/terraform/testdata/resource-metadata/resource-metadata.tfplan.dot",
        "coder.git/provisioner/terraform/testdata/resource-metadata/resource-metadata.tfplan.json",
        "coder.git/provisioner/terraform/testdata/resource-metadata/resource-metadata.tfstate.dot",
        "coder.git/provisioner/terraform/testdata/resource-metadata/resource-metadata.tfstate.json"
      ]
    }
  },
  "info": {
    "id": 440752086,
    "name": "coder",
    "full_name": "coder/coder",
    "owner": {
      "login": "coder",
      "html_url": "https://github.com/coder",
      "type": "Organization"
    },
    "html_url": "https://github.com/coder/coder",
    "description": "A tool that provisions remote development environments via Terraform",
    "url": "https://api.github.com/repos/coder/coder",
    "clone_url": "https://github.com/coder/coder.git",
    "homepage": "https://coder.com",
    "size": 58583,
    "stargazers_count": 3019,
    "watchers_count": 3019,
    "language": "Go"
  }
}