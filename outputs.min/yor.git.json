{
  "results": {
    "dockerfile": {
      "exist": true,
      "count": 2,
      "rootCount": 2,
      "subFolderCount": 0,
      "filepaths": [
        "yor.git/Dockerfile",
        "yor.git/Dockerfile.arm64"
      ]
    },
    "composefile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": true,
      "count": 34,
      "rootCount": 0,
      "subFolderCount": 34,
      "filepaths": [
        "yor.git/tests/integration/resources/commits_file_1.tf",
        "yor.git/tests/integration/resources/commits_file_2.tf",
        "yor.git/tests/terraform/malformed_file_in_dir/malformed.tf",
        "yor.git/tests/terraform/malformed_file_in_dir/trail.tf",
        "yor.git/tests/terraform/mixed/mixed.tf",
        "yor.git/tests/terraform/module/gcp_module/main.tf",
        "yor.git/tests/terraform/module/module/main.tf",
        "yor.git/tests/terraform/module/module_with_tags/main.tf",
        "yor.git/tests/terraform/module/provider_modules/main.tf",
        "yor.git/tests/terraform/module/tfe_module/main.tf",
        "yor.git/tests/terraform/providers/providers.tf",
        "yor.git/tests/terraform/resources/complex_tags.tf",
        "yor.git/tests/terraform/resources/eks.tf",
        "yor.git/tests/terraform/resources/attributescenarios/main.tf",
        "yor.git/tests/terraform/resources/collision/main.tf",
        "yor.git/tests/terraform/resources/external_tagged/main.tf",
        "yor.git/tests/terraform/resources/k8s_tf/main.tf",
        "yor.git/tests/terraform/resources/local_module/main.tf",
        "yor.git/tests/terraform/resources/local_module/sub_local_module/main.tf",
        "yor.git/tests/terraform/resources/local_module/sub_local_module/variables.tf",
        "yor.git/tests/terraform/resources/module1/main.tf",
        "yor.git/tests/terraform/resources/module2/main.tf",
        "yor.git/tests/terraform/resources/module2/outputs.tf",
        "yor.git/tests/terraform/resources/module3/main.tf",
        "yor.git/tests/terraform/resources/module3/outputs.tf",
        "yor.git/tests/terraform/resources/tagged/complex_tags_tagged.tf",
        "yor.git/tests/terraform/resources/taggedkms/deleted_kms.tf",
        "yor.git/tests/terraform/resources/taggedkms/origin_kms.tf",
        "yor.git/tests/terraform/resources/taggedkms/tagged_kms.tf",
        "yor.git/tests/terraform/resources/taggedkms/modified/modified_kms.tf",
        "yor.git/tests/terraform/resources/tomap/expected.tf",
        "yor.git/tests/terraform/resources/tomap/tomap.tf",
        "yor.git/tests/terraform/resources/var_tags/main.tf",
        "yor.git/tests/terraform/resources/var_tags/variables.tf"
      ]
    }
  },
  "info": {
    "id": 335331498,
    "name": "yor",
    "full_name": "bridgecrewio/yor",
    "owner": {
      "login": "bridgecrewio",
      "html_url": "https://github.com/bridgecrewio",
      "type": "Organization"
    },
    "html_url": "https://github.com/bridgecrewio/yor",
    "description": "Extensible auto-tagger for your IaC files. The ultimate way to link entities in the cloud back to the codified resource which created it.",
    "url": "https://api.github.com/repos/bridgecrewio/yor",
    "clone_url": "https://github.com/bridgecrewio/yor.git",
    "homepage": "https://www.yor.io",
    "size": 169976,
    "stargazers_count": 599,
    "watchers_count": 599,
    "language": "Go"
  }
}