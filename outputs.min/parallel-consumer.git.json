{
  "results": {
    "dockerfile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "composefile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": true,
      "count": 1,
      "rootCount": 1,
      "subFolderCount": 0,
      "filepaths": [
        "parallel-consumer.git/service.yml"
      ]
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 269083827,
    "name": "parallel-consumer",
    "full_name": "confluentinc/parallel-consumer",
    "owner": {
      "login": "confluentinc",
      "html_url": "https://github.com/confluentinc",
      "type": "Organization"
    },
    "html_url": "https://github.com/confluentinc/parallel-consumer",
    "description": "Parallel Apache Kafka client wrapper with per message ACK, client side queueing, a simpler consumer/producer API with key concurrency and extendable non-blocking IO processing.",
    "url": "https://api.github.com/repos/confluentinc/parallel-consumer",
    "clone_url": "https://github.com/confluentinc/parallel-consumer.git",
    "homepage": "https://confluent.io/confluent-accelerators/#parallel-consumer",
    "size": 2651,
    "stargazers_count": 401,
    "watchers_count": 401,
    "language": "Java"
  }
}