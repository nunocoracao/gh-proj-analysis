{
  "results": {
    "dockerfile": {
      "exist": true,
      "count": 9,
      "rootCount": 0,
      "subFolderCount": 9,
      "filepaths": [
        "Microservice.Architecture.git/applications/Microservice.AngularUI/docker/Dockerfile",
        "Microservice.Architecture.git/applications/Microservice.Gateway/Dockerfile",
        "Microservice.Architecture.git/applications/Microservice.IdentityServer/Dockerfile",
        "Microservice.Architecture.git/applications/Microservice.ReactUI/docker/Dockerfile",
        "Microservice.Architecture.git/microservices/identity/Microservice.IdentityService.Api/Dockerfile",
        "Microservice.Architecture.git/microservices/movie/Microservice.MovieService.Api/Dockerfile",
        "Microservice.Architecture.git/microservices/payment/Microservice.PaymentService.Api/Dockerfile",
        "Microservice.Architecture.git/microservices/review/Microservice.ReviewService.Api/Dockerfile",
        "Microservice.Architecture.git/microservices/test/Microservice.TestService.Api/Dockerfile"
      ]
    },
    "composefile": {
      "exist": true,
      "count": 4,
      "rootCount": 0,
      "subFolderCount": 4,
      "filepaths": [
        "Microservice.Architecture.git/deploy/docker-compose/docker-compose.override.yml",
        "Microservice.Architecture.git/deploy/docker-compose/docker-compose.yml",
        "Microservice.Architecture.git/deploy/docker-compose-infrastructure/docker-compose.override.yml",
        "Microservice.Architecture.git/deploy/docker-compose-infrastructure/docker-compose.yml"
      ]
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": true,
      "count": 1,
      "rootCount": 0,
      "subFolderCount": 1,
      "filepaths": [
        "Microservice.Architecture.git/deploy/k8s/base/kustomization.yaml"
      ]
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": true,
      "count": 13,
      "rootCount": 0,
      "subFolderCount": 13,
      "filepaths": [
        "Microservice.Architecture.git/deploy/k8s/base/gateway-deployment.yaml",
        "Microservice.Architecture.git/deploy/k8s/base/identity-server-deployment.yaml",
        "Microservice.Architecture.git/deploy/k8s/base/identity-service-deployment.yaml",
        "Microservice.Architecture.git/deploy/k8s/base/identity-service.yaml",
        "Microservice.Architecture.git/deploy/k8s/base/movie-service-deployment.yaml",
        "Microservice.Architecture.git/deploy/k8s/base/movie-service.yaml",
        "Microservice.Architecture.git/deploy/k8s/base/payment-service-deployment.yaml",
        "Microservice.Architecture.git/deploy/k8s/base/payment-service.yaml",
        "Microservice.Architecture.git/deploy/k8s/base/review-service-deployment.yaml",
        "Microservice.Architecture.git/deploy/k8s/base/review-service.yaml",
        "Microservice.Architecture.git/deploy/k8s/base/test-service-autoscaler.yaml",
        "Microservice.Architecture.git/deploy/k8s/base/test-service-deployment.yaml",
        "Microservice.Architecture.git/deploy/k8s/base/test-service.yaml"
      ]
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 431790051,
    "name": "Microservice.Architecture",
    "full_name": "roman-bilyak/Microservice.Architecture",
    "owner": {
      "login": "roman-bilyak",
      "html_url": "https://github.com/roman-bilyak",
      "type": "User"
    },
    "html_url": "https://github.com/roman-bilyak/Microservice.Architecture",
    "description": "This demo shows a working sample of microservices architecture using ASP.NET Core. It covers how to create microservices and API gateway using Ocelot, and how to deploy microservices using Docker.",
    "url": "https://api.github.com/repos/roman-bilyak/Microservice.Architecture",
    "clone_url": "https://github.com/roman-bilyak/Microservice.Architecture.git",
    "homepage": "",
    "size": 6364,
    "stargazers_count": 2,
    "watchers_count": 2,
    "language": "C#"
  }
}