{
  "results": {
    "dockerfile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "composefile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": true,
      "count": 36,
      "rootCount": 0,
      "subFolderCount": 36,
      "filepaths": [
        "tf2pulumi.git/tests/terraform/aws/asg/main.tf",
        "tf2pulumi.git/tests/terraform/aws/asg/outputs.tf",
        "tf2pulumi.git/tests/terraform/aws/asg/variables.tf",
        "tf2pulumi.git/tests/terraform/aws/cognito-user-pool/main.tf",
        "tf2pulumi.git/tests/terraform/aws/count/main.tf",
        "tf2pulumi.git/tests/terraform/aws/count/outputs.tf",
        "tf2pulumi.git/tests/terraform/aws/count/variables.tf",
        "tf2pulumi.git/tests/terraform/aws/ec2/main.tf",
        "tf2pulumi.git/tests/terraform/aws/ecs-alb/main.tf",
        "tf2pulumi.git/tests/terraform/aws/ecs-alb/outputs.tf",
        "tf2pulumi.git/tests/terraform/aws/ecs-alb/variables.tf",
        "tf2pulumi.git/tests/terraform/aws/eip/main.tf",
        "tf2pulumi.git/tests/terraform/aws/eip/outputs.tf",
        "tf2pulumi.git/tests/terraform/aws/eip/variables.tf",
        "tf2pulumi.git/tests/terraform/aws/elb/main.tf",
        "tf2pulumi.git/tests/terraform/aws/elb/outputs.tf",
        "tf2pulumi.git/tests/terraform/aws/elb/variables.tf",
        "tf2pulumi.git/tests/terraform/aws/elb2/main.tf",
        "tf2pulumi.git/tests/terraform/aws/lambda/main.tf",
        "tf2pulumi.git/tests/terraform/aws/lambda/outputs.tf",
        "tf2pulumi.git/tests/terraform/aws/lambda/variables.tf",
        "tf2pulumi.git/tests/terraform/aws/lb-listener/main.tf",
        "tf2pulumi.git/tests/terraform/aws/networking/regions.tf",
        "tf2pulumi.git/tests/terraform/aws/networking/variables.tf",
        "tf2pulumi.git/tests/terraform/aws/networking/numbering/variables.tf",
        "tf2pulumi.git/tests/terraform/aws/networking/region/outputs.tf",
        "tf2pulumi.git/tests/terraform/aws/networking/region/security_group.tf",
        "tf2pulumi.git/tests/terraform/aws/networking/region/subnets.tf",
        "tf2pulumi.git/tests/terraform/aws/networking/region/variables.tf",
        "tf2pulumi.git/tests/terraform/aws/networking/region/vpc.tf",
        "tf2pulumi.git/tests/terraform/aws/networking/subnet/outputs.tf",
        "tf2pulumi.git/tests/terraform/aws/networking/subnet/security_group.tf",
        "tf2pulumi.git/tests/terraform/aws/networking/subnet/subnet.tf",
        "tf2pulumi.git/tests/terraform/aws/networking/subnet/variables.tf",
        "tf2pulumi.git/tests/terraform/gcp/record_set/main.tf",
        "tf2pulumi.git/tests/terraform/random/random-integer/main.tf"
      ]
    }
  },
  "info": {
    "id": 140354089,
    "name": "tf2pulumi",
    "full_name": "pulumi/tf2pulumi",
    "owner": {
      "login": "pulumi",
      "html_url": "https://github.com/pulumi",
      "type": "Organization"
    },
    "html_url": "https://github.com/pulumi/tf2pulumi",
    "description": "A tool to convert Terraform projects to Pulumi TypeScript programs",
    "url": "https://api.github.com/repos/pulumi/tf2pulumi",
    "clone_url": "https://github.com/pulumi/tf2pulumi.git",
    "homepage": "https://www.pulumi.com",
    "size": 1120,
    "stargazers_count": 272,
    "watchers_count": 272,
    "language": "Go"
  }
}