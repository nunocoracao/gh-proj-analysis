{
  "results": {
    "dockerfile": {
      "exist": true,
      "count": 1,
      "rootCount": 0,
      "subFolderCount": 1,
      "filepaths": [
        "aws-fargate-server-sent-events-sse-amazon-kinesis-data-streams.git/cdk/docker/Dockerfile"
      ]
    },
    "composefile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 402777722,
    "name": "aws-fargate-server-sent-events-sse-amazon-kinesis-data-streams",
    "full_name": "aws-samples/aws-fargate-server-sent-events-sse-amazon-kinesis-data-streams",
    "owner": {
      "login": "aws-samples",
      "html_url": "https://github.com/aws-samples",
      "type": "Organization"
    },
    "html_url": "https://github.com/aws-samples/aws-fargate-server-sent-events-sse-amazon-kinesis-data-streams",
    "description": "When dealing with real-time data it is often required to send that data over the internet to various sources. Various technologies have enabled this such as web sockets and long polling. Recently server-sent events (SSE) has become a popular technology to push updates to clients. Ingesting this type of data source into AWS requires a client to be running continuously to receive those events. This sample shows how to connect to an SSE endpoint using AWS Fargate. This sample creates a docker image with a simple SSE client which publishes to an Amazon Kinesis Data Streams stream, then we simply store the event data in Amazon S3.",
    "url": "https://api.github.com/repos/aws-samples/aws-fargate-server-sent-events-sse-amazon-kinesis-data-streams",
    "clone_url": "https://github.com/aws-samples/aws-fargate-server-sent-events-sse-amazon-kinesis-data-streams.git",
    "homepage": "",
    "size": 78,
    "stargazers_count": 2,
    "watchers_count": 2,
    "language": "Java"
  }
}