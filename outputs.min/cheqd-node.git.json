{
  "results": {
    "dockerfile": {
      "exist": true,
      "count": 2,
      "rootCount": 0,
      "subFolderCount": 2,
      "filepaths": [
        "cheqd-node.git/tests/legacy/ibc-defi/hermes/hermes.Dockerfile",
        "cheqd-node.git/tests/legacy/ibc-defi/osmosis/osmosis.Dockerfile"
      ]
    },
    "composefile": {
      "exist": true,
      "count": 4,
      "rootCount": 0,
      "subFolderCount": 4,
      "filepaths": [
        "cheqd-node.git/docker/localnet/docker-compose.yml",
        "cheqd-node.git/docker/persistent-chains/docker-compose.yml",
        "cheqd-node.git/tests/legacy/ibc-defi/docker-compose.yaml",
        "cheqd-node.git/tests/legacy/upgrade/docker-compose.yml"
      ]
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 352898787,
    "name": "cheqd-node",
    "full_name": "cheqd/cheqd-node",
    "owner": {
      "login": "cheqd",
      "html_url": "https://github.com/cheqd",
      "type": "Organization"
    },
    "html_url": "https://github.com/cheqd/cheqd-node",
    "description": "Ledger/node software for cheqd's decentralised identity network. Built using the Cosmos SDK blockchain framework.",
    "url": "https://api.github.com/repos/cheqd/cheqd-node",
    "clone_url": "https://github.com/cheqd/cheqd-node.git",
    "homepage": "https://docs.cheqd.io/node",
    "size": 52109,
    "stargazers_count": 44,
    "watchers_count": 44,
    "language": "Go"
  }
}