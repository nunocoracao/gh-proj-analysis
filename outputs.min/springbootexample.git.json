{
  "results": {
    "dockerfile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "composefile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 91231250,
    "name": "springbootexample",
    "full_name": "L316476844/springbootexample",
    "owner": {
      "login": "L316476844",
      "html_url": "https://github.com/L316476844",
      "type": "User"
    },
    "html_url": "https://github.com/L316476844/springbootexample",
    "description": "springboot例子, 包含druid数据源, druid的sql监控, druid过滤, mybatis xml配置, mybatis分页插件, logback日志配置, springboot多环境配置, 发送邮件, AOP拦截, 过滤器 spring拦截器, 全局异常, 统一响应, 自定义事务, 动态数据源, 读写分离, Redis Session, redis缓存, xml注入spring boot无法扫描到的bean, actuator监控, kafka消息队列, Swagger2配置, dubbo注解方式, elasticsearch搜索引擎,",
    "url": "https://api.github.com/repos/L316476844/springbootexample",
    "clone_url": "https://github.com/L316476844/springbootexample.git",
    "homepage": "",
    "size": 101,
    "stargazers_count": 498,
    "watchers_count": 498,
    "language": "Java"
  }
}