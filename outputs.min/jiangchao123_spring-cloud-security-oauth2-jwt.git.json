{
  "results": {
    "dockerfile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "composefile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 84715062,
    "name": "spring-cloud-security-oauth2-jwt",
    "full_name": "jiangchao123/spring-cloud-security-oauth2-jwt",
    "owner": {
      "login": "jiangchao123",
      "html_url": "https://github.com/jiangchao123",
      "type": "User"
    },
    "html_url": "https://github.com/jiangchao123/spring-cloud-security-oauth2-jwt",
    "description": "使用spring-cloud-security-oauth2来实现oauth server和resource server，oauth Server和resource Server分开，oauth Server和resource Server使用了jwt的方式进行了实现。认证服务器生成jwt格式的token，并不对其进行持久化，然后资源服务器使用密钥进行校验token。",
    "url": "https://api.github.com/repos/jiangchao123/spring-cloud-security-oauth2-jwt",
    "clone_url": "https://github.com/jiangchao123/spring-cloud-security-oauth2-jwt.git",
    "homepage": null,
    "size": 17,
    "stargazers_count": 157,
    "watchers_count": 157,
    "language": "Java"
  }
}