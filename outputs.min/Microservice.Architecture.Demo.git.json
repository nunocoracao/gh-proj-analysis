{
  "results": {
    "dockerfile": {
      "exist": true,
      "count": 5,
      "rootCount": 0,
      "subFolderCount": 5,
      "filepaths": [
        "Microservice.Architecture.Demo.git/Exchange.Rates.CoinCap.OpenApi/Dockerfile",
        "Microservice.Architecture.Demo.git/Exchange.Rates.CoinCap.Polling.Api/Dockerfile",
        "Microservice.Architecture.Demo.git/Exchange.Rates.Ecb.OpenApi/Dockerfile",
        "Microservice.Architecture.Demo.git/Exchange.Rates.Ecb.Polling.Api/Dockerfile",
        "Microservice.Architecture.Demo.git/Exchange.Rates.Gateway/Dockerfile"
      ]
    },
    "composefile": {
      "exist": true,
      "count": 2,
      "rootCount": 2,
      "subFolderCount": 0,
      "filepaths": [
        "Microservice.Architecture.Demo.git/docker-compose.override.yml",
        "Microservice.Architecture.Demo.git/docker-compose.yml"
      ]
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 291556772,
    "name": "Microservice.Architecture.Demo",
    "full_name": "matjazbravc/Microservice.Architecture.Demo",
    "owner": {
      "login": "matjazbravc",
      "html_url": "https://github.com/matjazbravc",
      "type": "User"
    },
    "html_url": "https://github.com/matjazbravc/Microservice.Architecture.Demo",
    "description": "This demo shows a working sample of microservices architecture using ASP.NET Core. It covers how to create microservices, how to create API gateways using Ocelot, how to use MassTransit as distributed application framework, RabbitMQ as message broker, how to unit test microservices using xUnit, how to monitor microservices using health checks, and finally how to deploy microservices using Docker containers on Linux distributions.",
    "url": "https://api.github.com/repos/matjazbravc/Microservice.Architecture.Demo",
    "clone_url": "https://github.com/matjazbravc/Microservice.Architecture.Demo.git",
    "homepage": "",
    "size": 4203,
    "stargazers_count": 18,
    "watchers_count": 18,
    "language": "C#"
  }
}