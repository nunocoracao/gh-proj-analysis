{
  "results": {
    "dockerfile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "composefile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 220448991,
    "name": "dynamodb-nodejs",
    "full_name": "sumant-mishra/dynamodb-nodejs",
    "owner": {
      "login": "sumant-mishra",
      "html_url": "https://github.com/sumant-mishra",
      "type": "User"
    },
    "html_url": "https://github.com/sumant-mishra/dynamodb-nodejs",
    "description": "This is a sample NodeJS project helps in understanding how to connect to AWS DynamoDB remotely from NodeJS. It also helps to understand how we can perform operations like GET and INSERT using DynamoDB.",
    "url": "https://api.github.com/repos/sumant-mishra/dynamodb-nodejs",
    "clone_url": "https://github.com/sumant-mishra/dynamodb-nodejs.git",
    "homepage": "",
    "size": 929,
    "stargazers_count": 4,
    "watchers_count": 4,
    "language": "JavaScript"
  }
}