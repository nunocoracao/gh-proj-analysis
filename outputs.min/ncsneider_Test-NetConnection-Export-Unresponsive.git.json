{
  "results": {
    "dockerfile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "composefile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 261234363,
    "name": "Test-NetConnection-Export-Unresponsive",
    "full_name": "ncsneider/Test-NetConnection-Export-Unresponsive",
    "owner": {
      "login": "ncsneider",
      "html_url": "https://github.com/ncsneider",
      "type": "User"
    },
    "html_url": "https://github.com/ncsneider/Test-NetConnection-Export-Unresponsive",
    "description": "This script is designed to ping a list of IP addresses referencing a .csv file and output another .csv file highlighting the IP's that didn't respond. Eventually want to have this function loop every hour and send out notificaitons based on the unresponsive IP's addresses.",
    "url": "https://api.github.com/repos/ncsneider/Test-NetConnection-Export-Unresponsive",
    "clone_url": "https://github.com/ncsneider/Test-NetConnection-Export-Unresponsive.git",
    "homepage": null,
    "size": 46,
    "stargazers_count": 1,
    "watchers_count": 1,
    "language": "PowerShell"
  }
}