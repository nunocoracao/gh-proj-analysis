{
  "results": {
    "dockerfile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "composefile": {
      "exist": true,
      "count": 5,
      "rootCount": 0,
      "subFolderCount": 5,
      "filepaths": [
        "promscale.git/.github/workflows/docker-compose-tests.yml",
        "promscale.git/docker-compose/docker-compose.yaml",
        "promscale.git/docker-compose/high-availability/docker-compose.yaml",
        "promscale.git/docker-compose/jaeger-promscale-demo/docker-compose.yaml",
        "promscale.git/docker-compose/promscale-demo/docker-compose.yaml"
      ]
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 252745692,
    "name": "promscale",
    "full_name": "timescale/promscale",
    "owner": {
      "login": "timescale",
      "html_url": "https://github.com/timescale",
      "type": "Organization"
    },
    "html_url": "https://github.com/timescale/promscale",
    "description": "Promscale is a unified metric and trace observability backend for Prometheus, Jaeger and OpenTelemetry built on PostgreSQL and TimescaleDB.",
    "url": "https://api.github.com/repos/timescale/promscale",
    "clone_url": "https://github.com/timescale/promscale.git",
    "homepage": "https://www.timescale.com/promscale",
    "size": 17982,
    "stargazers_count": 1268,
    "watchers_count": 1268,
    "language": "Go"
  }
}