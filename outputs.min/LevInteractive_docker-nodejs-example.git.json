{
  "results": {
    "dockerfile": {
      "exist": true,
      "count": 1,
      "rootCount": 1,
      "subFolderCount": 0,
      "filepaths": [
        "docker-nodejs-example.git/Dockerfile"
      ]
    },
    "composefile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 32966646,
    "name": "docker-nodejs-example",
    "full_name": "LevInteractive/docker-nodejs-example",
    "owner": {
      "login": "LevInteractive",
      "html_url": "https://github.com/LevInteractive",
      "type": "Organization"
    },
    "html_url": "https://github.com/LevInteractive/docker-nodejs-example",
    "description": "A proof of concept for development using controlled persistence with docker. A load balanced, compartmentalized node.js application with mongodb, redis, and nginx.",
    "url": "https://api.github.com/repos/LevInteractive/docker-nodejs-example",
    "clone_url": "https://github.com/LevInteractive/docker-nodejs-example.git",
    "homepage": "http://lev-interactive.com/2015/03/30/docker-load-balanced-mongodb-persistence/",
    "size": 168,
    "stargazers_count": 22,
    "watchers_count": 22,
    "language": "Makefile"
  }
}