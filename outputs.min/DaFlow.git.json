{
  "results": {
    "dockerfile": {
      "exist": true,
      "count": 9,
      "rootCount": 0,
      "subFolderCount": 9,
      "filepaths": [
        "DaFlow.git/docker/images/hadoop/base/Dockerfile",
        "DaFlow.git/docker/images/hadoop/datanode/Dockerfile",
        "DaFlow.git/docker/images/hadoop/historyserver/Dockerfile",
        "DaFlow.git/docker/images/hadoop/namenode/Dockerfile",
        "DaFlow.git/docker/images/hive/Dockerfile",
        "DaFlow.git/docker/images/spark/adhoc/Dockerfile",
        "DaFlow.git/docker/images/spark/base/Dockerfile",
        "DaFlow.git/docker/images/spark/master/Dockerfile",
        "DaFlow.git/docker/images/spark/worker/Dockerfile"
      ]
    },
    "composefile": {
      "exist": true,
      "count": 1,
      "rootCount": 0,
      "subFolderCount": 1,
      "filepaths": [
        "DaFlow.git/docker/compose/docker-compose-daflow.yml"
      ]
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 123239544,
    "name": "DaFlow",
    "full_name": "sparsecode/DaFlow",
    "owner": {
      "login": "sparsecode",
      "html_url": "https://github.com/sparsecode",
      "type": "Organization"
    },
    "html_url": "https://github.com/sparsecode/DaFlow",
    "description": "Apache-Spark based Data Flow(ETL) Framework which supports multiple read, write destinations of different types and also support multiple categories of transformation rules.",
    "url": "https://api.github.com/repos/sparsecode/DaFlow",
    "clone_url": "https://github.com/sparsecode/DaFlow.git",
    "homepage": "",
    "size": 502,
    "stargazers_count": 24,
    "watchers_count": 24,
    "language": "Scala"
  }
}