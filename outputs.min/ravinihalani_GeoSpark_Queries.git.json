{
  "results": {
    "dockerfile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "composefile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 70144675,
    "name": "GeoSpark_Queries",
    "full_name": "ravinihalani/GeoSpark_Queries",
    "owner": {
      "login": "ravinihalani",
      "html_url": "https://github.com/ravinihalani",
      "type": "User"
    },
    "html_url": "https://github.com/ravinihalani/GeoSpark_Queries",
    "description": "+ Ran Apache Spark on a cluster with three machines (One master and two workers). The master was able to communicate with workers using bi-directional Password-less SSH. The video demo in the Project URL clearly demonstrates this point. + Loaded datasets into HDFS using Hive and used Spark to read data from HDFS. + Used a big chunk of query window dataset (using GeoSpark RectangleRDD) and the point datasets (using x1 and y1 column for GeoSpark PointRDD ).GeoSpark JTS library uses [x1,x2,y1,y2] to define a rectangle (aka. Envelope) instead of using [x1,y1,x2,y2]. + Used Google Compute Engine as IaaS to implement the project",
    "url": "https://api.github.com/repos/ravinihalani/GeoSpark_Queries",
    "clone_url": "https://github.com/ravinihalani/GeoSpark_Queries.git",
    "homepage": null,
    "size": 937,
    "stargazers_count": 1,
    "watchers_count": 1,
    "language": null
  }
}