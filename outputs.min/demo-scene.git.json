{
  "results": {
    "dockerfile": {
      "exist": true,
      "count": 10,
      "rootCount": 0,
      "subFolderCount": 10,
      "filepaths": [
        "demo-scene.git/ansible-tower/awx/Dockerfile",
        "demo-scene.git/azure-sqldw-sink-connector/Dockerfile",
        "demo-scene.git/connect-deepdive/Dockerfile-confluenthub",
        "demo-scene.git/csv-to-kafka/kafka-connect-spooldir/Dockerfile",
        "demo-scene.git/ksql-workshop/websockets/Dockerfile",
        "demo-scene.git/mongodb-demo/docker/demo-launcher/Dockerfile",
        "demo-scene.git/pickup-data-adventure-game/server/Dockerfile",
        "demo-scene.git/solace/Dockerfile",
        "demo-scene.git/twitter-streams/Dockerfile-kafka-connect-twitter",
        "demo-scene.git/twitter-streams-operator/docker/Dockerfile"
      ]
    },
    "composefile": {
      "exist": true,
      "count": 75,
      "rootCount": 0,
      "subFolderCount": 75,
      "filepaths": [
        "demo-scene.git/adminrest/docker-compose.yml",
        "demo-scene.git/ansible-tower/awx/docker-compose.yml",
        "demo-scene.git/azure-sqldw-sink-connector/docker-compose.yml",
        "demo-scene.git/build-a-streaming-pipeline/docker-compose.yml",
        "demo-scene.git/ccloud-replicator/docker-compose.yml",
        "demo-scene.git/cluster-linking/docker-compose.yml",
        "demo-scene.git/community-components-only/docker-compose.yml",
        "demo-scene.git/connect-cluster/docker-compose-scenario01.yml",
        "demo-scene.git/connect-cluster/docker-compose-scenario02.yml",
        "demo-scene.git/connect-cluster/docker-compose-scenario03.yml",
        "demo-scene.git/connect-cluster/docker-compose.yml",
        "demo-scene.git/connect-deepdive/docker-compose.yml",
        "demo-scene.git/connect-error-handling/docker-compose.yml",
        "demo-scene.git/connect-jdbc/docker-compose.yml",
        "demo-scene.git/csv-to-kafka/docker-compose.yml",
        "demo-scene.git/event-driven-microservices-workshop/docker-compose/local/docker-compose.yml",
        "demo-scene.git/event-driven-microservices-workshop/scripts/ccloud/docker-compose.yaml",
        "demo-scene.git/export-import-with-kafkacat/docker-compose.yml",
        "demo-scene.git/gcp-pipeline/docker-compose-all-local.yml",
        "demo-scene.git/gcp-pipeline/docker-compose-ccloud.yml",
        "demo-scene.git/gen-test-data/datagen/docker-compose.yml",
        "demo-scene.git/gen-test-data/voluble/docker-compose.yml",
        "demo-scene.git/ibm-demo/docker-compose.yml",
        "demo-scene.git/industry-themes/field_management/docker-compose.yml",
        "demo-scene.git/industry-themes/healthcare_claims_microservices/docker-compose.yml",
        "demo-scene.git/industry-themes/insurance_fraud_graphing/docker-compose.yml",
        "demo-scene.git/industry-themes/logistics_enrichment/docker-compose.yml",
        "demo-scene.git/industry-themes/pizza_orders/docker-compose.yml",
        "demo-scene.git/industry-themes/real_time_segmentation/docker-compose.yml",
        "demo-scene.git/influxdb-and-kafka/docker-compose.yml",
        "demo-scene.git/introduction-to-ksqldb/docker-compose.yml",
        "demo-scene.git/kafka-connect-single-message-transforms/docker-compose.yml",
        "demo-scene.git/kafka-connect-zero-to-hero/docker-compose.yml",
        "demo-scene.git/kafka-ecosystem/docker-compose.yml",
        "demo-scene.git/kafka-to-database/docker-compose.yml",
        "demo-scene.git/kafka-to-elasticsearch/docker-compose.yml",
        "demo-scene.git/kafka-to-s3/docker-compose.yml",
        "demo-scene.git/ksql-atm-fraud-detection/docker-compose.yml",
        "demo-scene.git/ksql-troubleshooting/docker-compose.yml",
        "demo-scene.git/ksql-workshop/docker-compose.yml",
        "demo-scene.git/ksqldb-tombstones/docker-compose.yml",
        "demo-scene.git/ksqldb-twitter/docker-compose.yml",
        "demo-scene.git/livestreams/july-15/docker-compose.yml",
        "demo-scene.git/livestreams/september-1/docker-compose.yaml",
        "demo-scene.git/maritime-ais/docker-compose.yml",
        "demo-scene.git/mongodb-demo/docker/docker-compose.yaml",
        "demo-scene.git/mqtt-tracker/docker-compose.yml",
        "demo-scene.git/mqtt-tracker/docker-compose_ccloud.yml",
        "demo-scene.git/mssql-to-kafka-with-ksqldb/docker-compose.yml",
        "demo-scene.git/multi-cluster-connect-and-ksql/docker-compose-no-auto-setup.yml",
        "demo-scene.git/multi-cluster-connect-and-ksql/docker-compose.yml",
        "demo-scene.git/no-more-silos/docker-compose.yml",
        "demo-scene.git/no-more-silos-oracle/docker-compose.yml",
        "demo-scene.git/oracle-and-kafka/docker-compose.yml",
        "demo-scene.git/oracle-ksql-elasticsearch/docker-compose/docker-compose.yml",
        "demo-scene.git/pickup-data-adventure-game/docker-compose.yml",
        "demo-scene.git/pipeline-to-the-cloud/docker-compose.yml",
        "demo-scene.git/pipeline-to-the-cloud/docker-compose_auto-provision.yml",
        "demo-scene.git/rabbitmq-into-kafka/docker-compose.yml",
        "demo-scene.git/rail-data-streaming-pipeline/docker-compose.yml",
        "demo-scene.git/rss-feed-into-kafka/docker-compose.yml",
        "demo-scene.git/solace/docker-compose.yml",
        "demo-scene.git/sonos/docker-compose.yml",
        "demo-scene.git/streaming-etl-mongodb-snowflake/docker-compose.yml",
        "demo-scene.git/streams-movie-demo/legacy-movies-docker/docker-compose.yml",
        "demo-scene.git/streams-movie-demo/workshop/docker-compose.yml",
        "demo-scene.git/syslog/docker-compose.yml",
        "demo-scene.git/telegram-bot-carparks/docker-compose.yml",
        "demo-scene.git/testing-streams/transforming-events/docker-compose.yaml",
        "demo-scene.git/testing-streams/transforming-ksqldb/docker-compose.yaml",
        "demo-scene.git/testing-streams/transforming-streams/docker-compose.yaml",
        "demo-scene.git/tiered-storage/docker-compose.yml",
        "demo-scene.git/twitter-streams/docker-compose.yml",
        "demo-scene.git/wifi-fun/docker-compose.yml",
        "demo-scene.git/xml-to-kafka/docker-compose.yml"
      ]
    }
  },
  "info": {
    "id": 123581868,
    "name": "demo-scene",
    "full_name": "confluentinc/demo-scene",
    "owner": {
      "login": "confluentinc",
      "html_url": "https://github.com/confluentinc",
      "type": "Organization"
    },
    "html_url": "https://github.com/confluentinc/demo-scene",
    "description": "üëæScripts and samples to support Confluent Demos and Talks. ‚ö†Ô∏èMight be rough around the edges ;-) üëâFor automated tutorials and QA'd code, see https://github.com/confluentinc/examples/",
    "url": "https://api.github.com/repos/confluentinc/demo-scene",
    "clone_url": "https://github.com/confluentinc/demo-scene.git",
    "homepage": "https://developer.confluent.io",
    "size": 217694,
    "stargazers_count": 1264,
    "watchers_count": 1264,
    "language": "Shell"
  }
}