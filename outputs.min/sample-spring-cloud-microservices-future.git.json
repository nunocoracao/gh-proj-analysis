{
  "results": {
    "dockerfile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "composefile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": true,
      "count": 1,
      "rootCount": 0,
      "subFolderCount": 1,
      "filepaths": [
        "sample-spring-cloud-microservices-future.git/config/gateway-service.yml"
      ]
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 179301607,
    "name": "sample-spring-cloud-microservices-future",
    "full_name": "piomin/sample-spring-cloud-microservices-future",
    "owner": {
      "login": "piomin",
      "html_url": "https://github.com/piomin",
      "type": "User"
    },
    "html_url": "https://github.com/piomin/sample-spring-cloud-microservices-future",
    "description": "sample microservices illustrating usage of non netflix spring cloud components spring cloud loadbalancer, spring cloud gateway and spring cloud consul",
    "url": "https://api.github.com/repos/piomin/sample-spring-cloud-microservices-future",
    "clone_url": "https://github.com/piomin/sample-spring-cloud-microservices-future.git",
    "homepage": "https://piotrminkowski.com/",
    "size": 18,
    "stargazers_count": 42,
    "watchers_count": 42,
    "language": "Java"
  }
}