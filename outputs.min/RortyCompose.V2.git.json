{
  "results": {
    "dockerfile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "composefile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 479849006,
    "name": "RortyCompose.V2",
    "full_name": "developersancho/RortyCompose.V2",
    "owner": {
      "login": "developersancho",
      "html_url": "https://github.com/developersancho",
      "type": "User"
    },
    "html_url": "https://github.com/developersancho/RortyCompose.V2",
    "description": "ðŸš€ Sample Android Clean Architecture on JetRorty App focused on the scalability, testability and maintainability written in Kotlin, following best practices using Jetpack with Compose.",
    "url": "https://api.github.com/repos/developersancho/RortyCompose.V2",
    "clone_url": "https://github.com/developersancho/RortyCompose.V2.git",
    "homepage": "https://blog.devgenius.io/jetpack-compose-clean-architecture-with-rorty-app-e7532da06719",
    "size": 12396,
    "stargazers_count": 112,
    "watchers_count": 112,
    "language": "Kotlin"
  }
}