{
  "results": {
    "dockerfile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "composefile": {
      "exist": true,
      "count": 2,
      "rootCount": 0,
      "subFolderCount": 2,
      "filepaths": [
        "stream-reactor.git/kafka-connect-hive/it/docker-compose.yml",
        "stream-reactor.git/kafka-connect-hive/src/test/resources/docker-compose.yml"
      ]
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 49836805,
    "name": "stream-reactor",
    "full_name": "lensesio/stream-reactor",
    "owner": {
      "login": "lensesio",
      "html_url": "https://github.com/lensesio",
      "type": "Organization"
    },
    "html_url": "https://github.com/lensesio/stream-reactor",
    "description": "Streaming reference architecture for ETL with Kafka and Kafka-Connect.                                                                         You can find more on http://lenses.io on how we provide a unified solution to manage your connectors,  most advanced SQL engine for Kafka and Kafka Streams, cluster monitoring and alerting, and more.",
    "url": "https://api.github.com/repos/lensesio/stream-reactor",
    "clone_url": "https://github.com/lensesio/stream-reactor.git",
    "homepage": "https://lenses.io",
    "size": 11123,
    "stargazers_count": 904,
    "watchers_count": 904,
    "language": "Scala"
  }
}