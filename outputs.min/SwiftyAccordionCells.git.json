{
  "results": {
    "dockerfile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "composefile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 46569408,
    "name": "SwiftyAccordionCells",
    "full_name": "justinmfischer/SwiftyAccordionCells",
    "owner": {
      "login": "justinmfischer",
      "html_url": "https://github.com/justinmfischer",
      "type": "User"
    },
    "html_url": "https://github.com/justinmfischer/SwiftyAccordionCells",
    "description": "Example Swift 3.0 Xcode 8.0 project which demonstrates how to expand and collapse a UITableView like an accordion. Using this lightweight data structure approach, UITableViewCell header/sub-item rows can be added or removed dynamically as needed. Subclass table for further reuse.",
    "url": "https://api.github.com/repos/justinmfischer/SwiftyAccordionCells",
    "clone_url": "https://github.com/justinmfischer/SwiftyAccordionCells.git",
    "homepage": "",
    "size": 3428,
    "stargazers_count": 169,
    "watchers_count": 169,
    "language": "Swift"
  }
}