{
  "results": {
    "dockerfile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "composefile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 163359611,
    "name": "awesome-AutoML-and-Lightweight-Models",
    "full_name": "guan-yuan/awesome-AutoML-and-Lightweight-Models",
    "owner": {
      "login": "guan-yuan",
      "html_url": "https://github.com/guan-yuan",
      "type": "User"
    },
    "html_url": "https://github.com/guan-yuan/awesome-AutoML-and-Lightweight-Models",
    "description": "A list of high-quality (newest) AutoML works and lightweight models including 1.) Neural Architecture Search, 2.) Lightweight Structures, 3.) Model Compression, Quantization and Acceleration, 4.) Hyperparameter Optimization, 5.) Automated Feature Engineering.",
    "url": "https://api.github.com/repos/guan-yuan/awesome-AutoML-and-Lightweight-Models",
    "clone_url": "https://github.com/guan-yuan/awesome-AutoML-and-Lightweight-Models.git",
    "homepage": "",
    "size": 154,
    "stargazers_count": 787,
    "watchers_count": 787,
    "language": null
  }
}