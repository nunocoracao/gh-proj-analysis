{
  "results": {
    "dockerfile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "composefile": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "k8s": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 84702028,
    "name": "spring-cloud-security-oauth2-jdbc",
    "full_name": "jiangchao123/spring-cloud-security-oauth2-jdbc",
    "owner": {
      "login": "jiangchao123",
      "html_url": "https://github.com/jiangchao123",
      "type": "User"
    },
    "html_url": "https://github.com/jiangchao123/spring-cloud-security-oauth2-jdbc",
    "description": "使用spring-cloud-security-oauth2来实现oauth server和resource server，oauth Server和resource Server分开，resource Server实现了两种方式，一种是当用token调用受保护资源时，使用RemoteTokenServices来去oauth server去校验。另一种是共享数据库，然后资源服务器自己通过数据库进行校验。",
    "url": "https://api.github.com/repos/jiangchao123/spring-cloud-security-oauth2-jdbc",
    "clone_url": "https://github.com/jiangchao123/spring-cloud-security-oauth2-jdbc.git",
    "homepage": "",
    "size": 21,
    "stargazers_count": 133,
    "watchers_count": 133,
    "language": "Java"
  }
}