{
  "results": {
    "dockerfile": {
      "exist": true,
      "count": 7,
      "rootCount": 0,
      "subFolderCount": 7,
      "filepaths": [
        "MicroserviceDemo.git/AzureFunctions/OrderApi.Messaging.Receive/OrderApi.Messaging.Receive/Dockerfile",
        "MicroserviceDemo.git/CustomerApi/CustomerApi/Dockerfile",
        "MicroserviceDemo.git/CustomerApi/CustomerApi/Dockerfile.Build",
        "MicroserviceDemo.git/Infrastructure/LinuxSqlPackageDocker/Dockerfile",
        "MicroserviceDemo.git/KedaDemoApi/KedaDemoApi/Dockerfile",
        "MicroserviceDemo.git/OrderApi/OrderApi/Dockerfile",
        "MicroserviceDemo.git/OrderApi/OrderApi/Dockerfile.Build"
      ]
    },
    "composefile": {
      "exist": true,
      "count": 2,
      "rootCount": 2,
      "subFolderCount": 0,
      "filepaths": [
        "MicroserviceDemo.git/docker-compose.Build.yml",
        "MicroserviceDemo.git/docker-compose.yml"
      ]
    },
    "devcontainer": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "kustomize": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "helm": {
      "exist": true,
      "count": 3,
      "rootCount": 0,
      "subFolderCount": 3,
      "filepaths": [
        "MicroserviceDemo.git/CustomerApi/CustomerApi/charts/customerapi/Chart.yaml",
        "MicroserviceDemo.git/KedaDemoApi/KedaDemoApi/charts/kedademoapi/Chart.yaml",
        "MicroserviceDemo.git/OrderApi/OrderApi/charts/orderapi/Chart.yaml"
      ]
    },
    "k8s": {
      "exist": true,
      "count": 8,
      "rootCount": 0,
      "subFolderCount": 8,
      "filepaths": [
        "MicroserviceDemo.git/CustomerApi/CustomerApi/charts/customerapi/templates/deployment.yaml",
        "MicroserviceDemo.git/CustomerApi/CustomerApi/charts/customerapi/templates/service.yaml",
        "MicroserviceDemo.git/CustomerApi/pipelines/templates/GetServiceBusConnectionString.yml",
        "MicroserviceDemo.git/KedaDemoApi/KedaDemoApi/charts/kedademoapi/templates/deployment.yaml",
        "MicroserviceDemo.git/KedaDemoApi/KedaDemoApi/charts/kedademoapi/templates/service.yaml",
        "MicroserviceDemo.git/KedaDemoApi/pipelines/templates/GetServiceBusConnectionString.yml",
        "MicroserviceDemo.git/OrderApi/OrderApi/charts/orderapi/templates/deployment.yaml",
        "MicroserviceDemo.git/OrderApi/OrderApi/charts/orderapi/templates/service.yaml"
      ]
    },
    "backstage": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    },
    "terraform": {
      "exist": false,
      "count": 0,
      "rootCount": 0,
      "subFolderCount": 0,
      "filepaths": []
    }
  },
  "info": {
    "id": 254961953,
    "name": "MicroserviceDemo",
    "full_name": "WolfgangOfner/MicroserviceDemo",
    "owner": {
      "login": "WolfgangOfner",
      "html_url": "https://github.com/WolfgangOfner",
      "type": "User"
    },
    "html_url": "https://github.com/WolfgangOfner/MicroserviceDemo",
    "description": "This is a demo with two ASP .NET 6 microservices using RabbitMQ and Docker",
    "url": "https://api.github.com/repos/WolfgangOfner/MicroserviceDemo",
    "clone_url": "https://github.com/WolfgangOfner/MicroserviceDemo.git",
    "homepage": "https://programmingwithwolfgang.com/microservice-series-from-zero-to-hero",
    "size": 2158,
    "stargazers_count": 498,
    "watchers_count": 498,
    "language": "C#"
  }
}